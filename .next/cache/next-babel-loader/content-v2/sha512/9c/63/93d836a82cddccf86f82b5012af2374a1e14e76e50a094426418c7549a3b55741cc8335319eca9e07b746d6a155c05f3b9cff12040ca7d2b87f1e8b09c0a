{"ast":null,"code":"import { createActionCreator } from \"deox\";\nimport { EProductsActions } from \"./constants\";\nexport const fetchProductsAction = {\n  request: createActionCreator(EProductsActions.FETCH_PRODUCTS_REQUEST, resolve => (pageIndex, pageSize, optionalParams, cb) => resolve({\n    pageIndex,\n    pageSize,\n    optionalParams,\n    cb\n  })),\n  success: createActionCreator(EProductsActions.FETCH_PRODUCTS_SUCCESS, resolve => products => resolve({\n    products\n  })),\n  failure: createActionCreator(EProductsActions.FETCH_PRODUCTS_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const fetchProductAction = {\n  request: createActionCreator(EProductsActions.FETCH_PRODUCT_REQUEST, resolve => (id, cb) => resolve({\n    id,\n    cb\n  })),\n  success: createActionCreator(EProductsActions.FETCH_PRODUCT_SUCCESS, resolve => product => resolve({\n    product\n  })),\n  failure: createActionCreator(EProductsActions.FETCH_PRODUCT_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const updateProductAction = {\n  request: createActionCreator(EProductsActions.UPDATE_PRODUCT_REQUEST, resolve => (id, body, successCb, failedCb) => resolve({\n    id,\n    body,\n    successCb,\n    failedCb\n  })),\n  success: createActionCreator(EProductsActions.UPDATE_PRODUCT_SUCCESS, resolve => product => resolve({\n    product\n  })),\n  failure: createActionCreator(EProductsActions.UPDATE_PRODUCT_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const createProductAction = {\n  request: createActionCreator(EProductsActions.CREATE_PRODUCT_REQUEST, resolve => (body, cb) => resolve({\n    body,\n    cb\n  })),\n  success: createActionCreator(EProductsActions.CREATE_PRODUCT_SUCCESS, resolve => product => resolve({\n    product\n  })),\n  failure: createActionCreator(EProductsActions.CREATE_PRODUCT_FAILED, resolve => error => resolve({\n    error\n  }))\n};","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/actions/products/index.ts"],"names":["createActionCreator","EProductsActions","fetchProductsAction","request","FETCH_PRODUCTS_REQUEST","resolve","pageIndex","pageSize","optionalParams","cb","success","FETCH_PRODUCTS_SUCCESS","products","failure","FETCH_PRODUCTS_FAILED","error","fetchProductAction","FETCH_PRODUCT_REQUEST","id","FETCH_PRODUCT_SUCCESS","product","FETCH_PRODUCT_FAILED","updateProductAction","UPDATE_PRODUCT_REQUEST","body","successCb","failedCb","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAILED","createProductAction","CREATE_PRODUCT_REQUEST","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_FAILED"],"mappings":"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","sourcesContent":["import { createActionCreator } from \"deox\";\n\nimport { EProductsActions } from \"./constants\";\nimport { TFetchProductResponse, TFetchProductsResponse, TUpdateProductBody, TCreateProductBody, TCreateProductResponse } from \"services/identity/products/types\";\n\nexport const fetchProductsAction = {\n  request: createActionCreator(\n    EProductsActions.FETCH_PRODUCTS_REQUEST,\n    (resolve) => (pageIndex: number, pageSize: number, optionalParams?: any,  cb?: () => void) =>\n      resolve({ pageIndex, pageSize, optionalParams, cb })\n  ),\n  success: createActionCreator(\n    EProductsActions.FETCH_PRODUCTS_SUCCESS,\n    (resolve) => (products: TFetchProductsResponse) => resolve({ products })\n  ),\n  failure: createActionCreator(\n    EProductsActions.FETCH_PRODUCTS_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const fetchProductAction = {\n  request: createActionCreator(\n    EProductsActions.FETCH_PRODUCT_REQUEST,\n    (resolve) => (id: string, cb?: () => void) => resolve({ id, cb })\n  ),\n  success: createActionCreator(\n    EProductsActions.FETCH_PRODUCT_SUCCESS,\n    (resolve) => (product: TFetchProductResponse) => resolve({ product })\n  ),\n  failure: createActionCreator(\n    EProductsActions.FETCH_PRODUCT_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const updateProductAction = {\n  request: createActionCreator(\n    EProductsActions.UPDATE_PRODUCT_REQUEST,\n    (resolve) =>\n      (\n        id: string,\n        body: TUpdateProductBody,\n        successCb?: () => void,\n        failedCb?: () => void\n      ) =>\n        resolve({ id, body, successCb, failedCb })\n  ),\n  success: createActionCreator(\n    EProductsActions.UPDATE_PRODUCT_SUCCESS,\n    (resolve) => (product: TFetchProductResponse) => resolve({ product })\n  ),\n  failure: createActionCreator(\n    EProductsActions.UPDATE_PRODUCT_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const createProductAction = {\n  request: createActionCreator(\n    EProductsActions.CREATE_PRODUCT_REQUEST,\n    (resolve) => (body: TCreateProductBody, cb?: () => void) =>\n      resolve({ body, cb })\n  ),\n  success: createActionCreator(\n    EProductsActions.CREATE_PRODUCT_SUCCESS,\n    (resolve) => (product: TCreateProductResponse) => resolve({ product })\n  ),\n  failure: createActionCreator(\n    EProductsActions.CREATE_PRODUCT_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};"]},"metadata":{},"sourceType":"module"}