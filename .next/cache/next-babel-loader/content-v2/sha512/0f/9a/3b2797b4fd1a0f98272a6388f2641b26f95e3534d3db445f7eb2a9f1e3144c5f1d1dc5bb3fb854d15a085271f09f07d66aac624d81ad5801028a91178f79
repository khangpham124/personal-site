{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport HttpClient from '../../../utils/axios/instance';\nimport { catchAxiosError } from '../../../utils/axios/error';\nimport { crmPlatform } from \"src/services/identity\";\nimport { USERS_API_URL, PLATFORM_ACCESSES, INVITE_USER } from '../index';\n// import { TUsersResponse, ItemsUser } from './types';\nexport class usersAPI extends HttpClient {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"getAllUsers\", async (pageNumber, filters) => {\n      const filtering = filters && Object.keys(filters).length ? `filter=${JSON.stringify(filters)}&` : '';\n      const paging = pageNumber ? `pageIndex=${pageNumber}` : 'pageIndex=1';\n      const response = await this.instance.get(`${crmPlatform}/${USERS_API_URL}?${filtering}${paging}&pageSize=20`).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"getUserDetailInCompanyByID\", async (userId, companyId) => {\n      const response = await this.instance.get(`${crmPlatform}/${USERS_API_URL}/${userId}/company/${companyId}`).catch(catchAxiosError);\n      return response.data;\n    });\n\n    _defineProperty(this, \"getDetailUser\", async IDUser => {\n      const response = await this.instance.get(`${crmPlatform}/${USERS_API_URL}/${IDUser}`).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"updateUserDetail\", async (userId, companyId, requestBody) => {\n      const response = await this.instance.patch(`${crmPlatform}/${USERS_API_URL}/${userId}/company/${companyId}`, requestBody).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"getPlatformAccessesbyID\", async IDUser => {\n      const response = await this.instance.patch(`${crmPlatform}/${PLATFORM_ACCESSES}/${IDUser}`).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"removeUser\", async (IDUser, requestBody) => {\n      const response = await this.instance.delete(`${crmPlatform}/user-role-company/${IDUser}`, requestBody).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"inviteNewUser\", async requestBody => {\n      const response = await this.instance.post(`${crmPlatform}/${INVITE_USER}`, requestBody).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"firstSetupUserDetail\", async (IDUser, requestBody) => {\n      const response = await this.instance.post(`${crmPlatform}/${USERS_API_URL}/${IDUser}/authentication`, requestBody).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"lastAccessCompany\", async (IDUser, IDCompany) => {\n      const response = await this.instance.patch(`${crmPlatform}/${USERS_API_URL}/${IDUser}/company/${IDCompany}/last-access`).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"getListCompany\", async (IDUser, pageIndex, pageSize) => {\n      const response = await this.instance.get(`${crmPlatform}/${USERS_API_URL}/${IDUser}/company-list?pageIndex=${pageIndex ? pageIndex : 1}${pageSize ? `&pageSize=${pageSize}` : `&pageSize=20`}&sort={\"lastAccess\": \"DESC\"}`).catch(catchAxiosError);\n      return response;\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}