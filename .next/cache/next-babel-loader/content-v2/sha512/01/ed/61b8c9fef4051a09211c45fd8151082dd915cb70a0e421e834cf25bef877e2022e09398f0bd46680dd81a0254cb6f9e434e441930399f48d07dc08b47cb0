{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchLeadsSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchLeadSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(createLeadSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(updateLeadSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(convertLeadToCustomerSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(postLeadAttachmentByIDSaga),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(root);\n\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { convertLeadToCustomerAction, createLeadAction, fetchLeadAction, fetchLeadsAction, updateLeadAction, postLeadAttachmentByIDAction } from \"../actions/leads\";\nimport LeadsInstance from \"services/identity/leads\";\nexport function fetchLeadsSaga(action) {\n  var _action$payload, pageIndex, pageSize, companyId, optionalParams, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchLeadsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _action$payload = action.payload, pageIndex = _action$payload.pageIndex, pageSize = _action$payload.pageSize, companyId = _action$payload.companyId, optionalParams = _action$payload.optionalParams, cb = _action$payload.cb;\n          _context.next = 4;\n          return call(LeadsInstance.fetchLeads, pageIndex, pageSize, companyId, optionalParams);\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return put(fetchLeadsAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put(fetchLeadsAction.failure(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\nexport function fetchLeadSaga(action) {\n  var _action$payload2, id, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchLeadSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _action$payload2 = action.payload, id = _action$payload2.id, cb = _action$payload2.cb;\n          _context2.next = 4;\n          return call(LeadsInstance.fetchLead, id);\n\n        case 4:\n          response = _context2.sent;\n          _context2.next = 7;\n          return put(fetchLeadAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put(fetchLeadAction.failure(_context2.t0));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\nexport function createLeadSaga(action) {\n  var _action$payload3, body, cb, response;\n\n  return _regeneratorRuntime.wrap(function createLeadSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _action$payload3 = action.payload, body = _action$payload3.body, cb = _action$payload3.cb;\n          _context3.next = 4;\n          return call(LeadsInstance.createLead, body);\n\n        case 4:\n          response = _context3.sent;\n          _context3.next = 7;\n          return put(createLeadAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 14;\n          return put(createLeadAction.failure(_context3.t0));\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\nexport function updateLeadSaga(action) {\n  var _action$payload4, id, body, successCb, failedCb;\n\n  return _regeneratorRuntime.wrap(function updateLeadSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _action$payload4 = action.payload, id = _action$payload4.id, body = _action$payload4.body, successCb = _action$payload4.successCb, failedCb = _action$payload4.failedCb;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(LeadsInstance.updateLead, id, body);\n\n        case 4:\n          successCb === null || successCb === void 0 ? void 0 : successCb();\n          _context4.next = 12;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](1);\n          _context4.next = 11;\n          return put(updateLeadAction.failure(_context4.t0));\n\n        case 11:\n          failedCb();\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[1, 7]]);\n}\nexport function convertLeadToCustomerSaga(action) {\n  var _action$payload5, id, cb, response;\n\n  return _regeneratorRuntime.wrap(function convertLeadToCustomerSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _action$payload5 = action.payload, id = _action$payload5.id, cb = _action$payload5.cb;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return call(LeadsInstance.convertToCustomer, id);\n\n        case 4:\n          response = _context5.sent;\n          _context5.next = 7;\n          return put(convertLeadToCustomerAction.success());\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb(response);\n          _context5.next = 14;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 14;\n          return put(convertLeadToCustomerAction.failure(_context5.t0));\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[1, 10]]);\n}\nexport function postLeadAttachmentByIDSaga(action) {\n  var _action$payload6, id, body, cb, response;\n\n  return _regeneratorRuntime.wrap(function postLeadAttachmentByIDSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _action$payload6 = action.payload, id = _action$payload6.id, body = _action$payload6.body, cb = _action$payload6.cb;\n          _context6.prev = 1;\n          _context6.next = 4;\n          return call(LeadsInstance.postLeadAttachmentByID, id, body);\n\n        case 4:\n          response = _context6.sent;\n          _context6.next = 7;\n          return put(postLeadAttachmentByIDAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context6.next = 14;\n          break;\n\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](1);\n          _context6.next = 14;\n          return put(postLeadAttachmentByIDAction.failure(_context6.t0));\n\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[1, 10]]);\n}\nexport default function root() {\n  return _regeneratorRuntime.wrap(function root$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([takeLatest(fetchLeadsAction.request.type, fetchLeadsSaga), takeLatest(fetchLeadAction.request.type, fetchLeadSaga), takeLatest(createLeadAction.request.type, createLeadSaga), takeLatest(updateLeadAction.request.type, updateLeadSaga), takeLatest(convertLeadToCustomerAction.request.type, convertLeadToCustomerSaga), takeLatest(postLeadAttachmentByIDAction.request.type, postLeadAttachmentByIDSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/sagas/leads.ts"],"names":["fetchLeadsSaga","fetchLeadSaga","createLeadSaga","updateLeadSaga","convertLeadToCustomerSaga","postLeadAttachmentByIDSaga","root","all","call","put","takeLatest","convertLeadToCustomerAction","createLeadAction","fetchLeadAction","fetchLeadsAction","updateLeadAction","postLeadAttachmentByIDAction","LeadsInstance","action","payload","pageIndex","pageSize","companyId","optionalParams","cb","fetchLeads","response","success","failure","id","fetchLead","body","createLead","successCb","failedCb","updateLead","convertToCustomer","postLeadAttachmentByID","request","type"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { ActionType } from \"deox\";\n\nimport {\n  convertLeadToCustomerAction,\n  createLeadAction,\n  fetchLeadAction,\n  fetchLeadsAction,\n  updateLeadAction,\n  postLeadAttachmentByIDAction\n} from \"../actions/leads\";\nimport LeadsInstance from \"services/identity/leads\";\nimport {\n  TCreateLeadResponse,\n  TFetchLeadResponse,\n  TFetchLeadsResponse,\n  TPostLeadAttachmentByIDResponse\n} from \"services/identity/leads/types\";\nimport { TCustomer } from \"services/identity/customers/types\";\n\nexport function* fetchLeadsSaga(\n  action: ActionType<typeof fetchLeadsAction.request>\n): Generator {\n  try {\n    const { pageIndex, pageSize, companyId, optionalParams, cb } = action.payload;\n    const response = yield call(LeadsInstance.fetchLeads, pageIndex, pageSize, companyId ,optionalParams);\n    yield put(fetchLeadsAction.success(response as TFetchLeadsResponse));\n    cb?.();\n  } catch (err) {\n    yield put(fetchLeadsAction.failure(err));\n  }\n}\n\nexport function* fetchLeadSaga(\n  action: ActionType<typeof fetchLeadAction.request>\n): Generator {\n  try {\n    const { id, cb } = action.payload;\n    const response = yield call(LeadsInstance.fetchLead, id);\n    yield put(fetchLeadAction.success(response as TFetchLeadResponse));\n    cb?.();\n  } catch (err) {\n    yield put(fetchLeadAction.failure(err));\n  }\n}\n\nexport function* createLeadSaga(\n  action: ActionType<typeof createLeadAction.request>\n): Generator {\n  try {\n    const { body, cb } = action.payload;\n    const response = yield call(LeadsInstance.createLead, body);\n    yield put(createLeadAction.success(response as TCreateLeadResponse));\n    cb?.();\n  } catch (err) {\n    yield put(createLeadAction.failure(err));\n  }\n}\n\nexport function* updateLeadSaga(\n  action: ActionType<typeof updateLeadAction.request>\n): Generator {\n  const { id, body, successCb, failedCb } = action.payload;\n  try {\n    yield call(LeadsInstance.updateLead, id, body);\n    successCb?.();\n  } catch (err) {\n    yield put(updateLeadAction.failure(err));\n    failedCb();\n  }\n}\n\nexport function* convertLeadToCustomerSaga(\n  action: ActionType<typeof convertLeadToCustomerAction.request>\n): Generator {\n  const { id, cb } = action.payload;\n  try {\n    const response = yield call(LeadsInstance.convertToCustomer, id);\n    yield put(convertLeadToCustomerAction.success());\n    cb?.(response as TCustomer);\n  } catch (err) {\n    yield put(convertLeadToCustomerAction.failure(err));\n  }\n}\n\nexport function* postLeadAttachmentByIDSaga(\n  action: ActionType<typeof postLeadAttachmentByIDAction.request>\n): Generator {\n  const { id, body, cb } = action.payload;\n  try {\n    const response = yield call(LeadsInstance.postLeadAttachmentByID, id, body);\n    yield put(postLeadAttachmentByIDAction.success(response as TPostLeadAttachmentByIDResponse));\n    cb?.();\n  } catch (err) {\n    yield put(postLeadAttachmentByIDAction.failure(err));\n  }\n}\n\nexport default function* root(): Generator {\n  yield all([\n    takeLatest(fetchLeadsAction.request.type, fetchLeadsSaga),\n    takeLatest(fetchLeadAction.request.type, fetchLeadSaga),\n    takeLatest(createLeadAction.request.type, createLeadSaga),\n    takeLatest(updateLeadAction.request.type, updateLeadSaga),\n    takeLatest(convertLeadToCustomerAction.request.type, convertLeadToCustomerSaga),\n    takeLatest(postLeadAttachmentByIDAction.request.type, postLeadAttachmentByIDSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}