{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchAnalyticsLeadsSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchAnalyticsLogcallsSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchAnalyticsCustomersSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(fetchAnalyticsTotalDurationSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(fetchAnalyticsConversionRateSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(root);\n\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { fetchAnalyticsLeadsAction, fetchAnalyticsLogcallsAction, fetchAnalyticsCustomersAction, fetchAnalyticsTotalDurationAction, fetchAnalyticsConversionRateAction } from \"../actions/analytics\";\nimport AnalyticsInstance from \"services/identity/analytics\";\nexport function fetchAnalyticsLeadsSaga(action) {\n  var _action$payload, fromDate, toDate, dimension, entity, question, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchAnalyticsLeadsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _action$payload = action.payload, fromDate = _action$payload.fromDate, toDate = _action$payload.toDate, dimension = _action$payload.dimension, entity = _action$payload.entity, question = _action$payload.question, cb = _action$payload.cb;\n          _context.next = 4;\n          return call(AnalyticsInstance.fetchAnalytics, fromDate, toDate, dimension, entity, question);\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return put(fetchAnalyticsLeadsAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put(fetchAnalyticsLeadsAction.failure(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\nexport function fetchAnalyticsLogcallsSaga(action) {\n  var _action$payload2, fromDate, toDate, dimension, entity, question, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchAnalyticsLogcallsSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _action$payload2 = action.payload, fromDate = _action$payload2.fromDate, toDate = _action$payload2.toDate, dimension = _action$payload2.dimension, entity = _action$payload2.entity, question = _action$payload2.question, cb = _action$payload2.cb;\n          _context2.next = 4;\n          return call(AnalyticsInstance.fetchAnalytics, fromDate, toDate, dimension, entity, question);\n\n        case 4:\n          response = _context2.sent;\n          _context2.next = 7;\n          return put(fetchAnalyticsLogcallsAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put(fetchAnalyticsLogcallsAction.failure(_context2.t0));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\nexport function fetchAnalyticsCustomersSaga(action) {\n  var _action$payload3, fromDate, toDate, dimension, entity, question, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchAnalyticsCustomersSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _action$payload3 = action.payload, fromDate = _action$payload3.fromDate, toDate = _action$payload3.toDate, dimension = _action$payload3.dimension, entity = _action$payload3.entity, question = _action$payload3.question, cb = _action$payload3.cb;\n          _context3.next = 4;\n          return call(AnalyticsInstance.fetchAnalytics, fromDate, toDate, dimension, entity, question);\n\n        case 4:\n          response = _context3.sent;\n          _context3.next = 7;\n          return put(fetchAnalyticsCustomersAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 14;\n          return put(fetchAnalyticsCustomersAction.failure(_context3.t0));\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\nexport function fetchAnalyticsTotalDurationSaga(action) {\n  var _action$payload4, fromDate, toDate, dimension, entity, question, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchAnalyticsTotalDurationSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _action$payload4 = action.payload, fromDate = _action$payload4.fromDate, toDate = _action$payload4.toDate, dimension = _action$payload4.dimension, entity = _action$payload4.entity, question = _action$payload4.question, cb = _action$payload4.cb;\n          _context4.next = 4;\n          return call(AnalyticsInstance.fetchAnalytics, fromDate, toDate, dimension, entity, question);\n\n        case 4:\n          response = _context4.sent;\n          _context4.next = 7;\n          return put(fetchAnalyticsTotalDurationAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context4.next = 14;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 14;\n          return put(fetchAnalyticsTotalDurationAction.failure(_context4.t0));\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 10]]);\n}\nexport function fetchAnalyticsConversionRateSaga(action) {\n  var _action$payload5, fromDate, toDate, dimension, entity, question, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchAnalyticsConversionRateSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _action$payload5 = action.payload, fromDate = _action$payload5.fromDate, toDate = _action$payload5.toDate, dimension = _action$payload5.dimension, entity = _action$payload5.entity, question = _action$payload5.question, cb = _action$payload5.cb;\n          _context5.next = 4;\n          return call(AnalyticsInstance.fetchAnalytics, fromDate, toDate, dimension, entity, question);\n\n        case 4:\n          response = _context5.sent;\n          _context5.next = 7;\n          return put(fetchAnalyticsConversionRateAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context5.next = 14;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 14;\n          return put(fetchAnalyticsConversionRateAction.failure(_context5.t0));\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 10]]);\n}\nexport default function root() {\n  return _regeneratorRuntime.wrap(function root$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([takeLatest(fetchAnalyticsLeadsAction.request.type, fetchAnalyticsLeadsSaga), takeLatest(fetchAnalyticsLogcallsAction.request.type, fetchAnalyticsLogcallsSaga), takeLatest(fetchAnalyticsCustomersAction.request.type, fetchAnalyticsCustomersSaga), takeLatest(fetchAnalyticsTotalDurationAction.request.type, fetchAnalyticsTotalDurationSaga), takeLatest(fetchAnalyticsConversionRateAction.request.type, fetchAnalyticsConversionRateSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/sagas/analytics.ts"],"names":["fetchAnalyticsLeadsSaga","fetchAnalyticsLogcallsSaga","fetchAnalyticsCustomersSaga","fetchAnalyticsTotalDurationSaga","fetchAnalyticsConversionRateSaga","root","all","call","put","takeLatest","fetchAnalyticsLeadsAction","fetchAnalyticsLogcallsAction","fetchAnalyticsCustomersAction","fetchAnalyticsTotalDurationAction","fetchAnalyticsConversionRateAction","AnalyticsInstance","action","payload","fromDate","toDate","dimension","entity","question","cb","fetchAnalytics","response","success","failure","request","type"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { ActionType } from \"deox\";\nimport {\n  fetchAnalyticsLeadsAction,\n  fetchAnalyticsLogcallsAction,\n  fetchAnalyticsCustomersAction,\n  fetchAnalyticsTotalDurationAction,\n  fetchAnalyticsConversionRateAction,\n} from \"../actions/analytics\";\nimport AnalyticsInstance from \"services/identity/analytics\";\nimport {\n  TAnalyticsResponse,\n  TConversionRateResponse,\n} from \"services/identity/analytics/types\";\n\nexport function* fetchAnalyticsLeadsSaga(\n  action: ActionType<typeof fetchAnalyticsLeadsAction.request>\n): Generator {\n  try {\n    const { fromDate, toDate, dimension, entity, question, cb } =\n      action.payload;\n    const response = yield call(\n      AnalyticsInstance.fetchAnalytics,\n      fromDate,\n      toDate,\n      dimension,\n      entity,\n      question\n    );\n    yield put(\n      fetchAnalyticsLeadsAction.success(response as TAnalyticsResponse)\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchAnalyticsLeadsAction.failure(err));\n  }\n}\n\nexport function* fetchAnalyticsLogcallsSaga(\n  action: ActionType<typeof fetchAnalyticsLogcallsAction.request>\n): Generator {\n  try {\n    const { fromDate, toDate, dimension, entity, question, cb } =\n      action.payload;\n    const response = yield call(\n      AnalyticsInstance.fetchAnalytics,\n      fromDate,\n      toDate,\n      dimension,\n      entity,\n      question\n    );\n    yield put(\n      fetchAnalyticsLogcallsAction.success(response as TAnalyticsResponse)\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchAnalyticsLogcallsAction.failure(err));\n  }\n}\n\nexport function* fetchAnalyticsCustomersSaga(\n  action: ActionType<typeof fetchAnalyticsCustomersAction.request>\n): Generator {\n  try {\n    const { fromDate, toDate, dimension, entity, question, cb } =\n      action.payload;\n    const response = yield call(\n      AnalyticsInstance.fetchAnalytics,\n      fromDate,\n      toDate,\n      dimension,\n      entity,\n      question\n    );\n    yield put(\n      fetchAnalyticsCustomersAction.success(response as TAnalyticsResponse)\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchAnalyticsCustomersAction.failure(err));\n  }\n}\n\nexport function* fetchAnalyticsTotalDurationSaga(\n  action: ActionType<typeof fetchAnalyticsTotalDurationAction.request>\n): Generator {\n  try {\n    const { fromDate, toDate, dimension, entity, question, cb } =\n      action.payload;\n    const response = yield call(\n      AnalyticsInstance.fetchAnalytics,\n      fromDate,\n      toDate,\n      dimension,\n      entity,\n      question\n    );\n    yield put(\n      fetchAnalyticsTotalDurationAction.success(response as TAnalyticsResponse)\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchAnalyticsTotalDurationAction.failure(err));\n  }\n}\n\nexport function* fetchAnalyticsConversionRateSaga(\n  action: ActionType<typeof fetchAnalyticsConversionRateAction.request>\n): Generator {\n  try {\n    const { fromDate, toDate, dimension, entity, question, cb } =\n      action.payload;\n    const response = yield call(\n      AnalyticsInstance.fetchAnalytics,\n      fromDate,\n      toDate,\n      dimension,\n      entity,\n      question\n    );\n    yield put(\n      fetchAnalyticsConversionRateAction.success(\n        response as TConversionRateResponse\n      )\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchAnalyticsConversionRateAction.failure(err));\n  }\n}\n\nexport default function* root(): Generator {\n  yield all([\n    takeLatest(fetchAnalyticsLeadsAction.request.type, fetchAnalyticsLeadsSaga),\n    takeLatest(\n      fetchAnalyticsLogcallsAction.request.type,\n      fetchAnalyticsLogcallsSaga\n    ),\n    takeLatest(\n      fetchAnalyticsCustomersAction.request.type,\n      fetchAnalyticsCustomersSaga\n    ),\n    takeLatest(\n      fetchAnalyticsTotalDurationAction.request.type,\n      fetchAnalyticsTotalDurationSaga\n    ),\n    takeLatest(\n      fetchAnalyticsConversionRateAction.request.type,\n      fetchAnalyticsConversionRateSaga\n    ),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}