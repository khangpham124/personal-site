{"ast":null,"code":"import { createActionCreator } from \"deox\";\nimport { ECustomersActions } from \"./constants\";\nexport const fetchCustomersAction = {\n  request: createActionCreator(ECustomersActions.FETCH_CUSTOMERS_REQUEST, resolve => (pageIndex, pageSize, companyId, optionalParams, cb) => resolve({\n    pageIndex,\n    pageSize,\n    companyId,\n    optionalParams,\n    cb\n  })),\n  success: createActionCreator(ECustomersActions.FETCH_CUSTOMERS_SUCCESS, resolve => customers => resolve({\n    customers\n  })),\n  failure: createActionCreator(ECustomersActions.FETCH_CUSTOMERS_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const fetchCustomerAction = {\n  request: createActionCreator(ECustomersActions.FETCH_CUSTOMER_REQUEST, resolve => (id, cb) => resolve({\n    id,\n    cb\n  })),\n  success: createActionCreator(ECustomersActions.FETCH_CUSTOMER_SUCCESS, resolve => customer => resolve({\n    customer\n  })),\n  failure: createActionCreator(ECustomersActions.FETCH_CUSTOMER_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const createCustomerAction = {\n  request: createActionCreator(ECustomersActions.CREATE_CUSTOMER_REQUEST, resolve => (body, cb) => resolve({\n    body,\n    cb\n  })),\n  success: createActionCreator(ECustomersActions.CREATE_CUSTOMER_SUCCESS, resolve => customer => resolve({\n    customer\n  })),\n  failure: createActionCreator(ECustomersActions.CREATE_CUSTOMER_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const updateCustomerAction = {\n  request: createActionCreator(ECustomersActions.UPDATE_CUSTOMER_REQUEST, resolve => (id, body, cb) => resolve({\n    id,\n    body,\n    cb\n  })),\n  success: createActionCreator(ECustomersActions.UPDATE_CUSTOMER_SUCCESS, resolve => customer => resolve({\n    customer\n  })),\n  failure: createActionCreator(ECustomersActions.UPDATE_CUSTOMER_FAILED, resolve => error => resolve({\n    error\n  }))\n};","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/actions/customers/index.ts"],"names":["createActionCreator","ECustomersActions","fetchCustomersAction","request","FETCH_CUSTOMERS_REQUEST","resolve","pageIndex","pageSize","companyId","optionalParams","cb","success","FETCH_CUSTOMERS_SUCCESS","customers","failure","FETCH_CUSTOMERS_FAILED","error","fetchCustomerAction","FETCH_CUSTOMER_REQUEST","id","FETCH_CUSTOMER_SUCCESS","customer","FETCH_CUSTOMER_FAILED","createCustomerAction","CREATE_CUSTOMER_REQUEST","body","CREATE_CUSTOMER_SUCCESS","CREATE_CUSTOMER_FAILED","updateCustomerAction","UPDATE_CUSTOMER_REQUEST","UPDATE_CUSTOMER_SUCCESS","UPDATE_CUSTOMER_FAILED"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,MAApC;AAEA,SAASC,iBAAT,QAAkC,aAAlC;AAGA,OAAO,MAAMC,oBAAoB,GAAG;AAClCC,EAAAA,OAAO,EAAEH,mBAAmB,CAC1BC,iBAAiB,CAACG,uBADQ,EAEzBC,OAAD,IAAa,CAACC,SAAD,EAAoBC,QAApB,EAAsCC,SAAtC,EAAyDC,cAAzD,EAA+EC,EAA/E,KACXL,OAAO,CAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,SAAvB;AAAmCC,IAAAA,cAAnC;AAAmDC,IAAAA;AAAnD,GAAD,CAHiB,CADM;AAMlCC,EAAAA,OAAO,EAAEX,mBAAmB,CAC1BC,iBAAiB,CAACW,uBADQ,EAEzBP,OAAD,IAAcQ,SAAD,IAAwCR,OAAO,CAAC;AAAEQ,IAAAA;AAAF,GAAD,CAFlC,CANM;AAUlCC,EAAAA,OAAO,EAAEd,mBAAmB,CAC1BC,iBAAiB,CAACc,sBADQ,EAEzBV,OAAD,IAAcW,KAAD,IAAWX,OAAO,CAAC;AAAEW,IAAAA;AAAF,GAAD,CAFL;AAVM,CAA7B;AAgBP,OAAO,MAAMC,mBAAmB,GAAG;AACjCd,EAAAA,OAAO,EAAEH,mBAAmB,CAC1BC,iBAAiB,CAACiB,sBADQ,EAEzBb,OAAD,IAAa,CAACc,EAAD,EAAaT,EAAb,KACXL,OAAO,CAAC;AAAEc,IAAAA,EAAF;AAAMT,IAAAA;AAAN,GAAD,CAHiB,CADK;AAMjCC,EAAAA,OAAO,EAAEX,mBAAmB,CAC1BC,iBAAiB,CAACmB,sBADQ,EAEzBf,OAAD,IAAcgB,QAAD,IAAsChB,OAAO,CAAC;AAAEgB,IAAAA;AAAF,GAAD,CAFhC,CANK;AAUjCP,EAAAA,OAAO,EAAEd,mBAAmB,CAC1BC,iBAAiB,CAACqB,qBADQ,EAEzBjB,OAAD,IAAcW,KAAD,IAAWX,OAAO,CAAC;AAAEW,IAAAA;AAAF,GAAD,CAFL;AAVK,CAA5B;AAgBP,OAAO,MAAMO,oBAAoB,GAAG;AAClCpB,EAAAA,OAAO,EAAEH,mBAAmB,CAC1BC,iBAAiB,CAACuB,uBADQ,EAEzBnB,OAAD,IAAa,CAACoB,IAAD,EAA4Bf,EAA5B,KACXL,OAAO,CAAC;AAAEoB,IAAAA,IAAF;AAAQf,IAAAA;AAAR,GAAD,CAHiB,CADM;AAMlCC,EAAAA,OAAO,EAAEX,mBAAmB,CAC1BC,iBAAiB,CAACyB,uBADQ,EAEzBrB,OAAD,IAAcgB,QAAD,IAAuChB,OAAO,CAAC;AAAEgB,IAAAA;AAAF,GAAD,CAFjC,CANM;AAUlCP,EAAAA,OAAO,EAAEd,mBAAmB,CAC1BC,iBAAiB,CAAC0B,sBADQ,EAEzBtB,OAAD,IAAcW,KAAD,IAAWX,OAAO,CAAC;AAAEW,IAAAA;AAAF,GAAD,CAFL;AAVM,CAA7B;AAgBP,OAAO,MAAMY,oBAAoB,GAAG;AAClCzB,EAAAA,OAAO,EAAEH,mBAAmB,CAC1BC,iBAAiB,CAAC4B,uBADQ,EAEzBxB,OAAD,IAAa,CAACc,EAAD,EAAaM,IAAb,EAAwCf,EAAxC,KACXL,OAAO,CAAC;AAAEc,IAAAA,EAAF;AAAMM,IAAAA,IAAN;AAAYf,IAAAA;AAAZ,GAAD,CAHiB,CADM;AAMlCC,EAAAA,OAAO,EAAEX,mBAAmB,CAC1BC,iBAAiB,CAAC6B,uBADQ,EAEzBzB,OAAD,IAAcgB,QAAD,IAAuChB,OAAO,CAAC;AAAEgB,IAAAA;AAAF,GAAD,CAFjC,CANM;AAUlCP,EAAAA,OAAO,EAAEd,mBAAmB,CAC1BC,iBAAiB,CAAC8B,sBADQ,EAEzB1B,OAAD,IAAcW,KAAD,IAAWX,OAAO,CAAC;AAAEW,IAAAA;AAAF,GAAD,CAFL;AAVM,CAA7B","sourcesContent":["import { createActionCreator } from \"deox\";\n\nimport { ECustomersActions } from \"./constants\";\nimport { TCreateCustomerBody, TCreateCustomerResponse, TFetchCustomerResponse, TFetchCustomersResponse, TUpdateCustomerBody, TUpdateCustomerResponse } from \"services/identity/customers/types\";\n\nexport const fetchCustomersAction = {\n  request: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMERS_REQUEST,\n    (resolve) => (pageIndex: number, pageSize: number, companyId: string, optionalParams?: any, cb?: () => void) =>\n      resolve({ pageIndex, pageSize, companyId,  optionalParams, cb })\n  ),\n  success: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMERS_SUCCESS,\n    (resolve) => (customers: TFetchCustomersResponse) => resolve({ customers })\n  ),\n  failure: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMERS_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const fetchCustomerAction = {\n  request: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMER_REQUEST,\n    (resolve) => (id: string, cb?: () => void) =>\n      resolve({ id, cb })\n  ),\n  success: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMER_SUCCESS,\n    (resolve) => (customer: TFetchCustomerResponse) => resolve({ customer })\n  ),\n  failure: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMER_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const createCustomerAction = {\n  request: createActionCreator(\n    ECustomersActions.CREATE_CUSTOMER_REQUEST,\n    (resolve) => (body: TCreateCustomerBody, cb?: () => void) =>\n      resolve({ body, cb })\n  ),\n  success: createActionCreator(\n    ECustomersActions.CREATE_CUSTOMER_SUCCESS,\n    (resolve) => (customer: TCreateCustomerResponse) => resolve({ customer })\n  ),\n  failure: createActionCreator(\n    ECustomersActions.CREATE_CUSTOMER_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const updateCustomerAction = {\n  request: createActionCreator(\n    ECustomersActions.UPDATE_CUSTOMER_REQUEST,\n    (resolve) => (id: string, body: TUpdateCustomerBody, cb?: () => void) =>\n      resolve({ id, body, cb })\n  ),\n  success: createActionCreator(\n    ECustomersActions.UPDATE_CUSTOMER_SUCCESS,\n    (resolve) => (customer: TUpdateCustomerResponse) => resolve({ customer })\n  ),\n  failure: createActionCreator(\n    ECustomersActions.UPDATE_CUSTOMER_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}