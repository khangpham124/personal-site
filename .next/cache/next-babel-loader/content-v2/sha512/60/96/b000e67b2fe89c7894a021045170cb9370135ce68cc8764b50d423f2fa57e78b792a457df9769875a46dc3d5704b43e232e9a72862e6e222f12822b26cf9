{"ast":null,"code":"import { createActionCreator } from \"deox\";\nimport { ELeadsActions } from \"./constants\";\nexport const fetchLeadsAction = {\n  request: createActionCreator(ELeadsActions.FETCH_LEADS_REQUEST, resolve => (pageIndex, pageSize, companyId, optionalParams, cb) => resolve({\n    pageIndex,\n    pageSize,\n    companyId,\n    optionalParams,\n    cb\n  })),\n  success: createActionCreator(ELeadsActions.FETCH_LEADS_SUCCESS, resolve => leads => resolve({\n    leads\n  })),\n  failure: createActionCreator(ELeadsActions.FETCH_LEADS_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const fetchLeadAction = {\n  request: createActionCreator(ELeadsActions.FETCH_LEAD_REQUEST, resolve => (id, cb) => resolve({\n    id,\n    cb\n  })),\n  success: createActionCreator(ELeadsActions.FETCH_LEAD_SUCCESS, resolve => lead => resolve({\n    lead\n  })),\n  failure: createActionCreator(ELeadsActions.FETCH_LEAD_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const createLeadAction = {\n  request: createActionCreator(ELeadsActions.CREATE_LEAD_REQUEST, resolve => (body, cb) => resolve({\n    body,\n    cb\n  })),\n  success: createActionCreator(ELeadsActions.CREATE_LEAD_SUCCESS, resolve => lead => resolve({\n    lead\n  })),\n  failure: createActionCreator(ELeadsActions.CREATE_LEAD_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const updateLeadAction = {\n  request: createActionCreator(ELeadsActions.UPDATE_LEAD_REQUEST, resolve => (id, body, successCb, failedCb) => resolve({\n    id,\n    body,\n    successCb,\n    failedCb\n  })),\n  success: createActionCreator(ELeadsActions.UPDATE_LEAD_SUCCESS, resolve => lead => resolve({\n    lead\n  })),\n  failure: createActionCreator(ELeadsActions.UPDATE_LEAD_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const convertLeadToCustomerAction = {\n  request: createActionCreator(ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_REQUEST, resolve => (id, cb) => resolve({\n    id,\n    cb\n  })),\n  success: createActionCreator(ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_SUCCESS, resolve => () => resolve()),\n  failure: createActionCreator(ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const postLeadAttachmentByIDAction = {\n  request: createActionCreator(ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_REQUEST, resolve => (id, body, cb) => resolve({\n    id,\n    body,\n    cb\n  })),\n  success: createActionCreator(ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_SUCCESS, resolve => attachment => resolve({\n    attachment\n  })),\n  failure: createActionCreator(ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_FAILED, resolve => error => resolve({\n    error\n  }))\n};","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/actions/leads/index.ts"],"names":["createActionCreator","ELeadsActions","fetchLeadsAction","request","FETCH_LEADS_REQUEST","resolve","pageIndex","pageSize","companyId","optionalParams","cb","success","FETCH_LEADS_SUCCESS","leads","failure","FETCH_LEADS_FAILED","error","fetchLeadAction","FETCH_LEAD_REQUEST","id","FETCH_LEAD_SUCCESS","lead","FETCH_LEAD_FAILED","createLeadAction","CREATE_LEAD_REQUEST","body","CREATE_LEAD_SUCCESS","CREATE_LEAD_FAILED","updateLeadAction","UPDATE_LEAD_REQUEST","successCb","failedCb","UPDATE_LEAD_SUCCESS","UPDATE_LEAD_FAILED","convertLeadToCustomerAction","CONVERT_LEAD_TO_CUSTOMER_REQUEST","CONVERT_LEAD_TO_CUSTOMER_SUCCESS","CONVERT_LEAD_TO_CUSTOMER_FAILED","postLeadAttachmentByIDAction","POST_LEAD_ATTACHMENTS_BY_ID_REQUEST","POST_LEAD_ATTACHMENTS_BY_ID_SUCCESS","attachment","POST_LEAD_ATTACHMENTS_BY_ID_FAILED"],"mappings":"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","sourcesContent":["import { createActionCreator } from \"deox\";\n\nimport { ELeadsActions } from \"./constants\";\nimport {\n  TCreateLeadBody,\n  TCreateLeadResponse,\n  TFetchLeadResponse,\n  TFetchLeadsResponse,\n  TUpdateLeadBody,\n  TUpdateLeadResponse,\n  TPostLeadAttachmentByIDResponse\n} from \"services/identity/leads/types\";\nimport { TCustomer } from \"services/identity/customers/types\";\n\nexport const fetchLeadsAction = {\n  request: createActionCreator(\n    ELeadsActions.FETCH_LEADS_REQUEST,\n    (resolve) => (pageIndex: number, pageSize: number, companyId?: string, optionalParams?: any, cb?: () => void) =>\n      resolve({ pageIndex, pageSize, companyId, optionalParams, cb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.FETCH_LEADS_SUCCESS,\n    (resolve) => (leads: TFetchLeadsResponse) => resolve({ leads })\n  ),\n  failure: createActionCreator(\n    ELeadsActions.FETCH_LEADS_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const fetchLeadAction = {\n  request: createActionCreator(\n    ELeadsActions.FETCH_LEAD_REQUEST,\n    (resolve) => (id: string, cb?: () => void) => resolve({ id, cb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.FETCH_LEAD_SUCCESS,\n    (resolve) => (lead: TFetchLeadResponse) => resolve({ lead })\n  ),\n  failure: createActionCreator(\n    ELeadsActions.FETCH_LEAD_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const createLeadAction = {\n  request: createActionCreator(\n    ELeadsActions.CREATE_LEAD_REQUEST,\n    (resolve) => (body: TCreateLeadBody, cb?: () => void) =>\n      resolve({ body, cb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.CREATE_LEAD_SUCCESS,\n    (resolve) => (lead: TCreateLeadResponse) => resolve({ lead })\n  ),\n  failure: createActionCreator(\n    ELeadsActions.CREATE_LEAD_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const updateLeadAction = {\n  request: createActionCreator(\n    ELeadsActions.UPDATE_LEAD_REQUEST,\n    (resolve) =>\n      (\n        id: string,\n        body: TUpdateLeadBody,\n        successCb?: () => void,\n        failedCb?: () => void\n      ) =>\n        resolve({ id, body, successCb, failedCb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.UPDATE_LEAD_SUCCESS,\n    (resolve) => (lead: TUpdateLeadResponse) => resolve({ lead })\n  ),\n  failure: createActionCreator(\n    ELeadsActions.UPDATE_LEAD_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const convertLeadToCustomerAction = {\n  request: createActionCreator(\n    ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_REQUEST,\n    (resolve) => (id: string, cb?: (customer: TCustomer) => void) => resolve({ id, cb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_SUCCESS,\n    (resolve) => () => resolve()\n  ),\n  failure: createActionCreator(\n    ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const postLeadAttachmentByIDAction = {\n  request: createActionCreator(\n    ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_REQUEST,\n    (resolve) => (id: string, body: any, cb?: () => void) => resolve({ id, body, cb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_SUCCESS,\n    (resolve) => (attachment: TPostLeadAttachmentByIDResponse) => resolve({ attachment })\n  ),\n  failure: createActionCreator(\n    ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};"]},"metadata":{},"sourceType":"module"}