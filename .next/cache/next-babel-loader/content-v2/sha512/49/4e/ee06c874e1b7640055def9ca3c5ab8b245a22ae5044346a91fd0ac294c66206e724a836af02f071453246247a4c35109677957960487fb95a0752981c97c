{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport authHelpers from \"../../services/helpers\";\n\nvar HttpClient = function HttpClient(baseURL) {\n  var _this = this;\n\n  _classCallCheck(this, HttpClient);\n\n  _defineProperty(this, \"instance\", void 0);\n\n  _defineProperty(this, \"requestInterceptor\", function () {\n    _this.instance.interceptors.request.use( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n        var authBearer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                authBearer = authHelpers.getCrmAccessToken(); // is development mode\n                // if (process.env.NODE_ENV === 'development') {\n\n                config.headers.Authorization = \"Bearer \".concat(authBearer);\n                return _context.abrupt(\"return\", config);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  });\n\n  _defineProperty(this, \"responseInterceptor\", function () {\n    _this.instance.interceptors.response.use(_this._handleResponse, _this.handleError);\n  });\n\n  _defineProperty(this, \"_handleResponse\", function (_ref2) {\n    var data = _ref2.data;\n    return {\n      data: data\n    };\n  });\n\n  _defineProperty(this, \"handleError\", function (error) {\n    throw error;\n  });\n\n  this.instance = axios.create({\n    baseURL: baseURL,\n    headers: {\n      'content-type': 'application/json'\n    },\n    paramsSerializer: function paramsSerializer(params) {\n      return queryString.stringify(params);\n    }\n  });\n  this.requestInterceptor();\n  this.responseInterceptor();\n};\n\nexport { HttpClient as default };","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/utils/axios/instance.ts"],"names":["axios","queryString","authHelpers","HttpClient","baseURL","instance","interceptors","request","use","config","authBearer","getCrmAccessToken","headers","Authorization","response","_handleResponse","handleError","data","error","create","paramsSerializer","params","stringify","requestInterceptor","responseInterceptor"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAgE,OAAhE;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;IAI8BC,U,GAG5B,oBAAaC,OAAb,EAA+B;AAAA;;AAAA;;AAAA;;AAAA,8CAYF,YAAM;AACjC,IAAA,KAAI,CAACC,QAAL,CAAcC,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC;AAAA,0EAAuC,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BC,gBAAAA,UAD+B,GAClBR,WAAW,CAACS,iBAAZ,EADkB,EAErC;AACA;;AACAF,gBAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,oBAAyCH,UAAzC;AAJqC,iDAK9BD,MAL8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvC;;AAAA;AAAA;AAAA;AAAA;AAQD,GArB8B;;AAAA,+CAsBD,YAAM;AAClC,IAAA,KAAI,CAACJ,QAAL,CAAcC,YAAd,CAA2BQ,QAA3B,CAAoCN,GAApC,CACE,KAAI,CAACO,eADP,EAEE,KAAI,CAACC,WAFP;AAID,GA3B8B;;AAAA,2CA6BL;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WAAmC;AAAEA,MAAAA,IAAI,EAAJA;AAAF,KAAnC;AAAA,GA7BK;;AAAA,uCA+BP,UAACC,KAAD,EAA6B;AACnD,UAAMA,KAAN;AACD,GAjC8B;;AAC7B,OAAKb,QAAL,GAAgBL,KAAK,CAACmB,MAAN,CAAa;AAC3Bf,IAAAA,OAAO,EAAPA,OAD2B;AAE3BQ,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFkB;AAK3BQ,IAAAA,gBAAgB,EAAE,0BAACC,MAAD;AAAA,aAAYpB,WAAW,CAACqB,SAAZ,CAAsBD,MAAtB,CAAZ;AAAA;AALS,GAAb,CAAhB;AAQA,OAAKE,kBAAL;AACA,OAAKC,mBAAL;AACD,C;;SAd2BrB,U","sourcesContent":["import axios, { AxiosError, AxiosInstance, AxiosResponse } from 'axios';\nimport queryString from 'query-string';\nimport authHelpers from \"../../services/helpers\";\nimport AuthInstance from \"../../services/identity/auth\";\nimport { baseUrl, authenticateURL, USERS_API_URL } from \"../../services/identity\";\n\nexport default abstract class HttpClient {\n  protected readonly instance: AxiosInstance;\n\n  constructor (baseURL?: string) {\n    this.instance = axios.create({\n      baseURL,\n      headers: {\n        'content-type': 'application/json'\n      },\n      paramsSerializer: (params) => queryString.stringify(params)\n    });\n\n    this.requestInterceptor();\n    this.responseInterceptor();\n  }\n  private requestInterceptor = () => {\n    this.instance.interceptors.request.use(async (config) => {\n      const authBearer = authHelpers.getCrmAccessToken();\n      // is development mode\n      // if (process.env.NODE_ENV === 'development') {\n      config.headers.Authorization = `Bearer ${authBearer}`;\n      return config;\n      // }\n    });\n  };\n  private responseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this.handleError\n    );\n  };\n\n  private _handleResponse = ({ data }: AxiosResponse): any => ({ data });\n\n  protected handleError = (error: AxiosError): void => {\n    throw error;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}