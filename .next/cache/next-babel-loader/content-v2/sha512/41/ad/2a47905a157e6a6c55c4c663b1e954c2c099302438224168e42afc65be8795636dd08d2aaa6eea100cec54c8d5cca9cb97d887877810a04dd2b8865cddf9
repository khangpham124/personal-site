{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { all, fork } from \"redux-saga/effects\";\nimport leadsSaga from \"./leads\";\nimport customersSaga from \"./customers\";\nimport logCallsSaga from \"./log-calls\";\nimport projectsSaga from \"./projects\";\nimport commentsSaga from \"./comments\";\nimport analyticsSaga from \"./analytics\";\nimport productsSaga from \"./products\";\n\nvar rootSaga = /*#__PURE__*/_regeneratorRuntime.mark(function root() {\n  return _regeneratorRuntime.wrap(function root$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(leadsSaga), fork(customersSaga), fork(logCallsSaga), fork(projectsSaga), fork(commentsSaga), fork(analyticsSaga), fork(productsSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, root);\n});\n\nexport default rootSaga;","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/sagas/index.ts"],"names":["all","fork","leadsSaga","customersSaga","logCallsSaga","projectsSaga","commentsSaga","analyticsSaga","productsSaga","rootSaga","root"],"mappings":";AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AAEA,OAAOC,SAAP,MAAsB,SAAtB;AACA,OAAOC,aAAP,MAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,aAAzB;AACA,OAAOC,YAAP,MAAyB,YAAzB;AACA,OAAOC,YAAP,MAAyB,YAAzB;AACA,OAAOC,aAAP,MAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,YAAzB;;AAEA,IAAMC,QAAQ,yCAAG,SAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACf,iBAAMV,GAAG,CAAC,CACRC,IAAI,CAACC,SAAD,CADI,EAERD,IAAI,CAACE,aAAD,CAFI,EAGRF,IAAI,CAACG,YAAD,CAHI,EAIRH,IAAI,CAACI,YAAD,CAJI,EAKRJ,IAAI,CAACK,YAAD,CALI,EAMRL,IAAI,CAACM,aAAD,CANI,EAORN,IAAI,CAACO,YAAD,CAPI,CAAD,CAAT;;AADe;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUE,IAAV;AAAA,CAAH,CAAd;;AAYA,eAAeD,QAAf","sourcesContent":["import { all, fork } from \"redux-saga/effects\";\n\nimport leadsSaga from \"./leads\";\nimport customersSaga from \"./customers\";\nimport logCallsSaga from \"./log-calls\";\nimport projectsSaga from \"./projects\";\nimport commentsSaga from \"./comments\";\nimport analyticsSaga from \"./analytics\";\nimport productsSaga from \"./products\";\n\nconst rootSaga = function* root(): Generator {\n  yield all([\n    fork(leadsSaga),\n    fork(customersSaga),\n    fork(logCallsSaga),\n    fork(projectsSaga),\n    fork(commentsSaga),\n    fork(analyticsSaga),\n    fork(productsSaga),\n  ]);\n};\n\nexport default rootSaga;\n"]},"metadata":{},"sourceType":"module"}