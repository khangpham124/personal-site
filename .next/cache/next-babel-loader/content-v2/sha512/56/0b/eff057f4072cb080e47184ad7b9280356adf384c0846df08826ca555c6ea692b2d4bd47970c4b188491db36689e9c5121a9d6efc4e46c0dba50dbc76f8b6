{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport authHelpers from \"../../services/helpers\";\nexport default class HttpClient {\n  constructor(baseURL) {\n    _defineProperty(this, \"instance\", void 0);\n\n    _defineProperty(this, \"requestInterceptor\", () => {\n      this.instance.interceptors.request.use(async config => {\n        const authBearer = authHelpers.getCrmAccessToken(); // is development mode\n        // if (process.env.NODE_ENV === 'development') {\n\n        config.headers.Authorization = `Bearer ${authBearer}`;\n        return config; // }\n      });\n    });\n\n    _defineProperty(this, \"responseInterceptor\", () => {\n      this.instance.interceptors.response.use(this._handleResponse, this.handleError);\n    });\n\n    _defineProperty(this, \"_handleResponse\", ({\n      data\n    }) => ({\n      data\n    }));\n\n    _defineProperty(this, \"handleError\", error => {\n      throw error;\n    });\n\n    this.instance = axios.create({\n      baseURL,\n      headers: {\n        'content-type': 'application/json'\n      },\n      paramsSerializer: params => queryString.stringify(params)\n    });\n    this.requestInterceptor();\n    this.responseInterceptor();\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/utils/axios/instance.ts"],"names":["axios","queryString","authHelpers","HttpClient","constructor","baseURL","instance","interceptors","request","use","config","authBearer","getCrmAccessToken","headers","Authorization","response","_handleResponse","handleError","data","error","create","paramsSerializer","params","stringify","requestInterceptor","responseInterceptor"],"mappings":";;AAAA,OAAOA,KAAP,MAAgE,OAAhE;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAIA,eAAe,MAAeC,UAAf,CAA0B;AAGvCC,EAAAA,WAAW,CAAEC,OAAF,EAAoB;AAAA;;AAAA,gDAYF,MAAM;AACjC,WAAKC,QAAL,CAAcC,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,MAAOC,MAAP,IAAkB;AACvD,cAAMC,UAAU,GAAGT,WAAW,CAACU,iBAAZ,EAAnB,CADuD,CAEvD;AACA;;AACAF,QAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAAgC,UAASH,UAAW,EAApD;AACA,eAAOD,MAAP,CALuD,CAMvD;AACD,OAPD;AAQD,KArB8B;;AAAA,iDAsBD,MAAM;AAClC,WAAKJ,QAAL,CAAcC,YAAd,CAA2BQ,QAA3B,CAAoCN,GAApC,CACE,KAAKO,eADP,EAEE,KAAKC,WAFP;AAID,KA3B8B;;AAAA,6CA6BL,CAAC;AAAEC,MAAAA;AAAF,KAAD,MAAmC;AAAEA,MAAAA;AAAF,KAAnC,CA7BK;;AAAA,yCA+BNC,KAAD,IAA6B;AACnD,YAAMA,KAAN;AACD,KAjC8B;;AAC7B,SAAKb,QAAL,GAAgBN,KAAK,CAACoB,MAAN,CAAa;AAC3Bf,MAAAA,OAD2B;AAE3BQ,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFkB;AAK3BQ,MAAAA,gBAAgB,EAAGC,MAAD,IAAYrB,WAAW,CAACsB,SAAZ,CAAsBD,MAAtB;AALH,KAAb,CAAhB;AAQA,SAAKE,kBAAL;AACA,SAAKC,mBAAL;AACD;;AAdsC","sourcesContent":["import axios, { AxiosError, AxiosInstance, AxiosResponse } from 'axios';\nimport queryString from 'query-string';\nimport authHelpers from \"../../services/helpers\";\nimport AuthInstance from \"../../services/identity/auth\";\nimport { baseUrl, authenticateURL, USERS_API_URL } from \"../../services/identity\";\n\nexport default abstract class HttpClient {\n  protected readonly instance: AxiosInstance;\n\n  constructor (baseURL?: string) {\n    this.instance = axios.create({\n      baseURL,\n      headers: {\n        'content-type': 'application/json'\n      },\n      paramsSerializer: (params) => queryString.stringify(params)\n    });\n\n    this.requestInterceptor();\n    this.responseInterceptor();\n  }\n  private requestInterceptor = () => {\n    this.instance.interceptors.request.use(async (config) => {\n      const authBearer = authHelpers.getCrmAccessToken();\n      // is development mode\n      // if (process.env.NODE_ENV === 'development') {\n      config.headers.Authorization = `Bearer ${authBearer}`;\n      return config;\n      // }\n    });\n  };\n  private responseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this.handleError\n    );\n  };\n\n  private _handleResponse = ({ data }: AxiosResponse): any => ({ data });\n\n  protected handleError = (error: AxiosError): void => {\n    throw error;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}