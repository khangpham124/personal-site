{"ast":null,"code":"import { createActionCreator } from \"deox\";\nimport { EAnalyticsActions } from \"./constants\";\nexport var fetchAnalyticsLeadsAction = {\n  request: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_LEADS_REQUEST, function (resolve) {\n    return function (fromDate, toDate, dimension) {\n      var entity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"leads\";\n      var question = arguments.length > 4 ? arguments[4] : undefined;\n      var cb = arguments.length > 5 ? arguments[5] : undefined;\n      return resolve({\n        fromDate: fromDate,\n        toDate: toDate,\n        dimension: dimension,\n        entity: entity,\n        question: question,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_LEADS_SUCCESS, function (resolve) {\n    return function (analytics) {\n      return resolve({\n        analytics: analytics\n      });\n    };\n  }),\n  failure: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_LEADS_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var fetchAnalyticsLogcallsAction = {\n  request: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_LOGCALLS_REQUEST, function (resolve) {\n    return function (fromDate, toDate, dimension) {\n      var entity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"logcalls\";\n      var question = arguments.length > 4 ? arguments[4] : undefined;\n      var cb = arguments.length > 5 ? arguments[5] : undefined;\n      return resolve({\n        fromDate: fromDate,\n        toDate: toDate,\n        dimension: dimension,\n        entity: entity,\n        question: question,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_LOGCALLS_SUCCESS, function (resolve) {\n    return function (analytics) {\n      return resolve({\n        analytics: analytics\n      });\n    };\n  }),\n  failure: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_LOGCALLS_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var fetchAnalyticsCustomersAction = {\n  request: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_CUSTOMERS_REQUEST, function (resolve) {\n    return function (fromDate, toDate, dimension) {\n      var entity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"customers\";\n      var question = arguments.length > 4 ? arguments[4] : undefined;\n      var cb = arguments.length > 5 ? arguments[5] : undefined;\n      return resolve({\n        fromDate: fromDate,\n        toDate: toDate,\n        dimension: dimension,\n        entity: entity,\n        question: question,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_CUSTOMERS_SUCCESS, function (resolve) {\n    return function (analytics) {\n      return resolve({\n        analytics: analytics\n      });\n    };\n  }),\n  failure: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_CUSTOMERS_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var fetchAnalyticsTotalDurationAction = {\n  request: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_TOTAL_DURATION_REQUEST, function (resolve) {\n    return function (fromDate, toDate, dimension) {\n      var entity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"logcalls\";\n      var question = arguments.length > 4 ? arguments[4] : undefined;\n      var cb = arguments.length > 5 ? arguments[5] : undefined;\n      return resolve({\n        fromDate: fromDate,\n        toDate: toDate,\n        dimension: dimension,\n        entity: entity,\n        question: question,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_TOTAL_DURATION_SUCCESS, function (resolve) {\n    return function (analytics) {\n      return resolve({\n        analytics: analytics\n      });\n    };\n  }),\n  failure: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_TOTAL_DURATION_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var fetchAnalyticsConversionRateAction = {\n  request: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_CONVERSION_RATE_REQUEST, function (resolve) {\n    return function (fromDate, toDate, dimension) {\n      var entity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"leads\";\n      var question = arguments.length > 4 ? arguments[4] : undefined;\n      var cb = arguments.length > 5 ? arguments[5] : undefined;\n      return resolve({\n        fromDate: fromDate,\n        toDate: toDate,\n        dimension: dimension,\n        entity: entity,\n        question: question,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_CONVERSION_RATE_SUCCESS, function (resolve) {\n    return function (analytics) {\n      return resolve({\n        analytics: analytics\n      });\n    };\n  }),\n  failure: createActionCreator(EAnalyticsActions.FETCH_ANALYTICS_CONVERSION_RATE_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/actions/analytics/index.ts"],"names":["createActionCreator","EAnalyticsActions","fetchAnalyticsLeadsAction","request","FETCH_ANALYTICS_LEADS_REQUEST","resolve","fromDate","toDate","dimension","entity","question","cb","success","FETCH_ANALYTICS_LEADS_SUCCESS","analytics","failure","FETCH_ANALYTICS_LEADS_FAILED","error","fetchAnalyticsLogcallsAction","FETCH_ANALYTICS_LOGCALLS_REQUEST","FETCH_ANALYTICS_LOGCALLS_SUCCESS","FETCH_ANALYTICS_LOGCALLS_FAILED","fetchAnalyticsCustomersAction","FETCH_ANALYTICS_CUSTOMERS_REQUEST","FETCH_ANALYTICS_CUSTOMERS_SUCCESS","FETCH_ANALYTICS_CUSTOMERS_FAILED","fetchAnalyticsTotalDurationAction","FETCH_ANALYTICS_TOTAL_DURATION_REQUEST","FETCH_ANALYTICS_TOTAL_DURATION_SUCCESS","FETCH_ANALYTICS_TOTAL_DURATION_FAILED","fetchAnalyticsConversionRateAction","FETCH_ANALYTICS_CONVERSION_RATE_REQUEST","FETCH_ANALYTICS_CONVERSION_RATE_SUCCESS","FETCH_ANALYTICS_CONVERSION_RATE_FAILED"],"mappings":"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","sourcesContent":["import { createActionCreator } from \"deox\";\n\nimport { EAnalyticsActions } from \"./constants\";\nimport {\n  TAnalyticsResponse,\n  inputAnalytics,\n  TConversionRateResponse,\n} from \"services/identity/analytics/types\";\n\nexport const fetchAnalyticsLeadsAction = {\n  request: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_LEADS_REQUEST,\n    (resolve) =>\n      (\n        fromDate: string,\n        toDate: string,\n        dimension: inputAnalytics[\"dimension\"],\n        entity = \"leads\",\n        question: inputAnalytics[\"question\"],\n        cb?: () => void\n      ) =>\n        resolve({ fromDate, toDate, dimension, entity, question, cb })\n  ),\n  success: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_LEADS_SUCCESS,\n    (resolve) => (analytics: TAnalyticsResponse) => resolve({ analytics })\n  ),\n  failure: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_LEADS_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const fetchAnalyticsLogcallsAction = {\n  request: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_LOGCALLS_REQUEST,\n    (resolve) =>\n      (\n        fromDate: string,\n        toDate: string,\n        dimension: inputAnalytics[\"dimension\"],\n        entity = \"logcalls\",\n        question: inputAnalytics[\"question\"],\n        cb?: () => void\n      ) =>\n        resolve({ fromDate, toDate, dimension, entity, question, cb })\n  ),\n  success: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_LOGCALLS_SUCCESS,\n    (resolve) => (analytics: TAnalyticsResponse) => resolve({ analytics })\n  ),\n  failure: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_LOGCALLS_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const fetchAnalyticsCustomersAction = {\n  request: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_CUSTOMERS_REQUEST,\n    (resolve) =>\n      (\n        fromDate: string,\n        toDate: string,\n        dimension: inputAnalytics[\"dimension\"],\n        entity = \"customers\",\n        question: inputAnalytics[\"question\"],\n        cb?: () => void\n      ) =>\n        resolve({ fromDate, toDate, dimension, entity, question, cb })\n  ),\n  success: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_CUSTOMERS_SUCCESS,\n    (resolve) => (analytics: TAnalyticsResponse) => resolve({ analytics })\n  ),\n  failure: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_CUSTOMERS_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const fetchAnalyticsTotalDurationAction = {\n  request: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_TOTAL_DURATION_REQUEST,\n    (resolve) =>\n      (\n        fromDate: string,\n        toDate: string,\n        dimension: inputAnalytics[\"dimension\"],\n        entity = \"logcalls\",\n        question: inputAnalytics[\"question\"],\n        cb?: () => void\n      ) =>\n        resolve({ fromDate, toDate, dimension, entity, question, cb })\n  ),\n  success: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_TOTAL_DURATION_SUCCESS,\n    (resolve) => (analytics: TAnalyticsResponse) => resolve({ analytics })\n  ),\n  failure: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_TOTAL_DURATION_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const fetchAnalyticsConversionRateAction = {\n  request: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_CONVERSION_RATE_REQUEST,\n    (resolve) =>\n      (\n        fromDate: string,\n        toDate: string,\n        dimension: inputAnalytics[\"dimension\"],\n        entity = \"leads\",\n        question: inputAnalytics[\"question\"],\n        cb?: () => void\n      ) =>\n        resolve({ fromDate, toDate, dimension, entity, question, cb })\n  ),\n  success: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_CONVERSION_RATE_SUCCESS,\n    (resolve) => (analytics: TConversionRateResponse) => resolve({ analytics })\n  ),\n  failure: createActionCreator(\n    EAnalyticsActions.FETCH_ANALYTICS_CONVERSION_RATE_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}