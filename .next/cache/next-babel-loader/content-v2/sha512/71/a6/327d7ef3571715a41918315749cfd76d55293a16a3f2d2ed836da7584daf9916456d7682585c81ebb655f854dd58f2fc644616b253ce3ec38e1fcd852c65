{"ast":null,"code":"import { createActionCreator } from \"deox\";\nimport { ELogCallsActions } from \"./constants\";\nexport const fetchLogCallsAction = {\n  request: createActionCreator(ELogCallsActions.FETCH_LOG_CALLS_REQUEST, resolve => (type, id, pageIndex, pageSize, cb) => resolve({\n    type,\n    id,\n    pageIndex,\n    pageSize,\n    cb\n  })),\n  success: createActionCreator(ELogCallsActions.FETCH_LOG_CALLS_SUCCESS, resolve => logCalls => resolve({\n    logCalls\n  })),\n  failure: createActionCreator(ELogCallsActions.FETCH_LOG_CALLS_FAILED, resolve => error => resolve({\n    error\n  }))\n};\nexport const createLogCallAction = {\n  request: createActionCreator(ELogCallsActions.CREATE_LOG_CALL_REQUEST, resolve => (type, id, body, cb) => resolve({\n    type,\n    id,\n    body,\n    cb\n  })),\n  success: createActionCreator(ELogCallsActions.CREATE_LOG_CALL_SUCCESS, resolve => () => resolve()),\n  failure: createActionCreator(ELogCallsActions.CREATE_LOG_CALL_FAILED, resolve => error => resolve({\n    error\n  }))\n};","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/actions/log-calls/index.ts"],"names":["createActionCreator","ELogCallsActions","fetchLogCallsAction","request","FETCH_LOG_CALLS_REQUEST","resolve","type","id","pageIndex","pageSize","cb","success","FETCH_LOG_CALLS_SUCCESS","logCalls","failure","FETCH_LOG_CALLS_FAILED","error","createLogCallAction","CREATE_LOG_CALL_REQUEST","body","CREATE_LOG_CALL_SUCCESS","CREATE_LOG_CALL_FAILED"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,MAApC;AAEA,SAASC,gBAAT,QAAiC,aAAjC;AAMA,OAAO,MAAMC,mBAAmB,GAAG;AACjCC,EAAAA,OAAO,EAAEH,mBAAmB,CAC1BC,gBAAgB,CAACG,uBADS,EAEzBC,OAAD,IACE,CACEC,IADF,EAEEC,EAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEC,EALF,KAOEL,OAAO,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,EAAR;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,QAAvB;AAAiCC,IAAAA;AAAjC,GAAD,CAVe,CADK;AAajCC,EAAAA,OAAO,EAAEX,mBAAmB,CAC1BC,gBAAgB,CAACW,uBADS,EAEzBP,OAAD,IAAcQ,QAAD,IAAsCR,OAAO,CAAC;AAAEQ,IAAAA;AAAF,GAAD,CAFhC,CAbK;AAiBjCC,EAAAA,OAAO,EAAEd,mBAAmB,CAC1BC,gBAAgB,CAACc,sBADS,EAEzBV,OAAD,IAAcW,KAAD,IAAWX,OAAO,CAAC;AAAEW,IAAAA;AAAF,GAAD,CAFL;AAjBK,CAA5B;AAuBP,OAAO,MAAMC,mBAAmB,GAAG;AACjCd,EAAAA,OAAO,EAAEH,mBAAmB,CAC1BC,gBAAgB,CAACiB,uBADS,EAEzBb,OAAD,IACE,CACEC,IADF,EAEEC,EAFF,EAGEY,IAHF,EAIET,EAJF,KAMEL,OAAO,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,EAAR;AAAYY,IAAAA,IAAZ;AAAkBT,IAAAA;AAAlB,GAAD,CATe,CADK;AAYjCC,EAAAA,OAAO,EAAEX,mBAAmB,CAC1BC,gBAAgB,CAACmB,uBADS,EAEzBf,OAAD,IAAa,MAAMA,OAAO,EAFA,CAZK;AAgBjCS,EAAAA,OAAO,EAAEd,mBAAmB,CAC1BC,gBAAgB,CAACoB,sBADS,EAEzBhB,OAAD,IAAcW,KAAD,IAAWX,OAAO,CAAC;AAAEW,IAAAA;AAAF,GAAD,CAFL;AAhBK,CAA5B","sourcesContent":["import { createActionCreator } from \"deox\";\n\nimport { ELogCallsActions } from \"./constants\";\nimport {\n  TCreateLogCallBody,\n  TFetchLogCallsResponse,\n} from \"services/identity/log-calls/types\";\n\nexport const fetchLogCallsAction = {\n  request: createActionCreator(\n    ELogCallsActions.FETCH_LOG_CALLS_REQUEST,\n    (resolve) =>\n      (\n        type: \"lead\" | \"customer\",\n        id: string,\n        pageIndex: number,\n        pageSize: number,\n        cb?: () => void\n      ) =>\n        resolve({ type, id, pageIndex, pageSize, cb })\n  ),\n  success: createActionCreator(\n    ELogCallsActions.FETCH_LOG_CALLS_SUCCESS,\n    (resolve) => (logCalls: TFetchLogCallsResponse) => resolve({ logCalls })\n  ),\n  failure: createActionCreator(\n    ELogCallsActions.FETCH_LOG_CALLS_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const createLogCallAction = {\n  request: createActionCreator(\n    ELogCallsActions.CREATE_LOG_CALL_REQUEST,\n    (resolve) =>\n      (\n        type: \"lead\" | \"customer\",\n        id: string,\n        body: TCreateLogCallBody,\n        cb?: () => void\n      ) =>\n        resolve({ type, id, body, cb })\n  ),\n  success: createActionCreator(\n    ELogCallsActions.CREATE_LOG_CALL_SUCCESS,\n    (resolve) => () => resolve()\n  ),\n  failure: createActionCreator(\n    ELogCallsActions.CREATE_LOG_CALL_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}