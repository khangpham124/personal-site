{"ast":null,"code":"import { createActionCreator } from \"deox\";\nimport { ELeadsActions } from \"./constants\";\nexport var fetchLeadsAction = {\n  request: createActionCreator(ELeadsActions.FETCH_LEADS_REQUEST, function (resolve) {\n    return function (pageIndex, pageSize, companyId, optionalParams, cb) {\n      return resolve({\n        pageIndex: pageIndex,\n        pageSize: pageSize,\n        companyId: companyId,\n        optionalParams: optionalParams,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(ELeadsActions.FETCH_LEADS_SUCCESS, function (resolve) {\n    return function (leads) {\n      return resolve({\n        leads: leads\n      });\n    };\n  }),\n  failure: createActionCreator(ELeadsActions.FETCH_LEADS_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var fetchLeadAction = {\n  request: createActionCreator(ELeadsActions.FETCH_LEAD_REQUEST, function (resolve) {\n    return function (id, cb) {\n      return resolve({\n        id: id,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(ELeadsActions.FETCH_LEAD_SUCCESS, function (resolve) {\n    return function (lead) {\n      return resolve({\n        lead: lead\n      });\n    };\n  }),\n  failure: createActionCreator(ELeadsActions.FETCH_LEAD_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var createLeadAction = {\n  request: createActionCreator(ELeadsActions.CREATE_LEAD_REQUEST, function (resolve) {\n    return function (body, cb) {\n      return resolve({\n        body: body,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(ELeadsActions.CREATE_LEAD_SUCCESS, function (resolve) {\n    return function (lead) {\n      return resolve({\n        lead: lead\n      });\n    };\n  }),\n  failure: createActionCreator(ELeadsActions.CREATE_LEAD_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var updateLeadAction = {\n  request: createActionCreator(ELeadsActions.UPDATE_LEAD_REQUEST, function (resolve) {\n    return function (id, body, successCb, failedCb) {\n      return resolve({\n        id: id,\n        body: body,\n        successCb: successCb,\n        failedCb: failedCb\n      });\n    };\n  }),\n  success: createActionCreator(ELeadsActions.UPDATE_LEAD_SUCCESS, function (resolve) {\n    return function (lead) {\n      return resolve({\n        lead: lead\n      });\n    };\n  }),\n  failure: createActionCreator(ELeadsActions.UPDATE_LEAD_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var convertLeadToCustomerAction = {\n  request: createActionCreator(ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_REQUEST, function (resolve) {\n    return function (id, cb) {\n      return resolve({\n        id: id,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_SUCCESS, function (resolve) {\n    return function () {\n      return resolve();\n    };\n  }),\n  failure: createActionCreator(ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var postLeadAttachmentByIDAction = {\n  request: createActionCreator(ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_REQUEST, function (resolve) {\n    return function (id, body, cb) {\n      return resolve({\n        id: id,\n        body: body,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_SUCCESS, function (resolve) {\n    return function (attachment) {\n      return resolve({\n        attachment: attachment\n      });\n    };\n  }),\n  failure: createActionCreator(ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/actions/leads/index.ts"],"names":["createActionCreator","ELeadsActions","fetchLeadsAction","request","FETCH_LEADS_REQUEST","resolve","pageIndex","pageSize","companyId","optionalParams","cb","success","FETCH_LEADS_SUCCESS","leads","failure","FETCH_LEADS_FAILED","error","fetchLeadAction","FETCH_LEAD_REQUEST","id","FETCH_LEAD_SUCCESS","lead","FETCH_LEAD_FAILED","createLeadAction","CREATE_LEAD_REQUEST","body","CREATE_LEAD_SUCCESS","CREATE_LEAD_FAILED","updateLeadAction","UPDATE_LEAD_REQUEST","successCb","failedCb","UPDATE_LEAD_SUCCESS","UPDATE_LEAD_FAILED","convertLeadToCustomerAction","CONVERT_LEAD_TO_CUSTOMER_REQUEST","CONVERT_LEAD_TO_CUSTOMER_SUCCESS","CONVERT_LEAD_TO_CUSTOMER_FAILED","postLeadAttachmentByIDAction","POST_LEAD_ATTACHMENTS_BY_ID_REQUEST","POST_LEAD_ATTACHMENTS_BY_ID_SUCCESS","attachment","POST_LEAD_ATTACHMENTS_BY_ID_FAILED"],"mappings":"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","sourcesContent":["import { createActionCreator } from \"deox\";\n\nimport { ELeadsActions } from \"./constants\";\nimport {\n  TCreateLeadBody,\n  TCreateLeadResponse,\n  TFetchLeadResponse,\n  TFetchLeadsResponse,\n  TUpdateLeadBody,\n  TUpdateLeadResponse,\n  TPostLeadAttachmentByIDResponse\n} from \"services/identity/leads/types\";\nimport { TCustomer } from \"services/identity/customers/types\";\n\nexport const fetchLeadsAction = {\n  request: createActionCreator(\n    ELeadsActions.FETCH_LEADS_REQUEST,\n    (resolve) => (pageIndex: number, pageSize: number, companyId?: string, optionalParams?: any, cb?: () => void) =>\n      resolve({ pageIndex, pageSize, companyId, optionalParams, cb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.FETCH_LEADS_SUCCESS,\n    (resolve) => (leads: TFetchLeadsResponse) => resolve({ leads })\n  ),\n  failure: createActionCreator(\n    ELeadsActions.FETCH_LEADS_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const fetchLeadAction = {\n  request: createActionCreator(\n    ELeadsActions.FETCH_LEAD_REQUEST,\n    (resolve) => (id: string, cb?: () => void) => resolve({ id, cb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.FETCH_LEAD_SUCCESS,\n    (resolve) => (lead: TFetchLeadResponse) => resolve({ lead })\n  ),\n  failure: createActionCreator(\n    ELeadsActions.FETCH_LEAD_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const createLeadAction = {\n  request: createActionCreator(\n    ELeadsActions.CREATE_LEAD_REQUEST,\n    (resolve) => (body: TCreateLeadBody, cb?: () => void) =>\n      resolve({ body, cb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.CREATE_LEAD_SUCCESS,\n    (resolve) => (lead: TCreateLeadResponse) => resolve({ lead })\n  ),\n  failure: createActionCreator(\n    ELeadsActions.CREATE_LEAD_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const updateLeadAction = {\n  request: createActionCreator(\n    ELeadsActions.UPDATE_LEAD_REQUEST,\n    (resolve) =>\n      (\n        id: string,\n        body: TUpdateLeadBody,\n        successCb?: () => void,\n        failedCb?: () => void\n      ) =>\n        resolve({ id, body, successCb, failedCb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.UPDATE_LEAD_SUCCESS,\n    (resolve) => (lead: TUpdateLeadResponse) => resolve({ lead })\n  ),\n  failure: createActionCreator(\n    ELeadsActions.UPDATE_LEAD_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const convertLeadToCustomerAction = {\n  request: createActionCreator(\n    ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_REQUEST,\n    (resolve) => (id: string, cb?: (customer: TCustomer) => void) => resolve({ id, cb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_SUCCESS,\n    (resolve) => () => resolve()\n  ),\n  failure: createActionCreator(\n    ELeadsActions.CONVERT_LEAD_TO_CUSTOMER_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const postLeadAttachmentByIDAction = {\n  request: createActionCreator(\n    ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_REQUEST,\n    (resolve) => (id: string, body: any, cb?: () => void) => resolve({ id, body, cb })\n  ),\n  success: createActionCreator(\n    ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_SUCCESS,\n    (resolve) => (attachment: TPostLeadAttachmentByIDResponse) => resolve({ attachment })\n  ),\n  failure: createActionCreator(\n    ELeadsActions.POST_LEAD_ATTACHMENTS_BY_ID_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};"]},"metadata":{},"sourceType":"module"}