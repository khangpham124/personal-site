{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport cookie from \"react-cookies\";\nconst COOKIE_DOMAIN = process.env.REACT_APP_COOKIE_DOMAIN;\nconst COOKIE_REFRESH_TOKEN = \"rtk\";\nconst COOKIE_ACCESS_TOKEN = \"atk\";\nconst COOKIE_CRM_ACCESS_TOKEN = \"crm_token\"; // const MAXIMUM_EXPIRES_TIME = 2147483647;\n\nconst cookieSetting = {\n  path: \"/\",\n  domain: COOKIE_DOMAIN // secure: true,\n  // httpOnly: true,\n  // expires: MAXIMUM_EXPIRES_TIME,\n\n};\n\nconst setCookie = (name, value) => cookie.save(name, value, cookieSetting);\n\nconst getCookie = name => cookie.load(name);\n\nconst removeCookie = name => cookie.remove(name, cookieSetting);\n\nclass AuthHelpers {\n  constructor() {\n    _defineProperty(this, \"getRefreshToken\", () => getCookie(COOKIE_REFRESH_TOKEN));\n\n    _defineProperty(this, \"storeRefreshToken\", refreshToken => setCookie(COOKIE_REFRESH_TOKEN, refreshToken));\n\n    _defineProperty(this, \"getAccessToken\", () => getCookie(COOKIE_ACCESS_TOKEN));\n\n    _defineProperty(this, \"getCrmAccessToken\", () => getCookie(COOKIE_CRM_ACCESS_TOKEN));\n\n    _defineProperty(this, \"storeAccessToken\", accessToken => setCookie(COOKIE_ACCESS_TOKEN, accessToken));\n\n    _defineProperty(this, \"clearTokens\", () => {\n      removeCookie(COOKIE_REFRESH_TOKEN);\n      removeCookie(COOKIE_ACCESS_TOKEN);\n    });\n  }\n\n}\n\nconst instance = new AuthHelpers();\nexport default instance;","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/services/helpers.ts"],"names":["cookie","COOKIE_DOMAIN","process","env","REACT_APP_COOKIE_DOMAIN","COOKIE_REFRESH_TOKEN","COOKIE_ACCESS_TOKEN","COOKIE_CRM_ACCESS_TOKEN","cookieSetting","path","domain","setCookie","name","value","save","getCookie","load","removeCookie","remove","AuthHelpers","refreshToken","accessToken","instance"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,eAAnB;AAEA,MAAMC,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAlC;AACA,MAAMC,oBAAoB,GAAG,KAA7B;AACA,MAAMC,mBAAmB,GAAG,KAA5B;AACA,MAAMC,uBAAuB,GAAG,WAAhC,C,CACA;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,GADc;AAEpBC,EAAAA,MAAM,EAAET,aAFY,CAGpB;AACA;AACA;;AALoB,CAAtB;;AAQA,MAAMU,SAAS,GAAG,CAACC,IAAD,EAAeC,KAAf,KAChBb,MAAM,CAACc,IAAP,CAAYF,IAAZ,EAAkBC,KAAlB,EAAyBL,aAAzB,CADF;;AAGA,MAAMO,SAAS,GAAIH,IAAD,IAAkBZ,MAAM,CAACgB,IAAP,CAAYJ,IAAZ,CAApC;;AAEA,MAAMK,YAAY,GAAIL,IAAD,IAAkBZ,MAAM,CAACkB,MAAP,CAAcN,IAAd,EAAoBJ,aAApB,CAAvC;;AAEA,MAAMW,WAAN,CAAkB;AAAA;AAAA,6CACE,MAAMJ,SAAS,CAACV,oBAAD,CADjB;;AAAA,+CAGKe,YAAD,IAClBT,SAAS,CAACN,oBAAD,EAAuBe,YAAvB,CAJK;;AAAA,4CAMC,MAAML,SAAS,CAACT,mBAAD,CANhB;;AAAA,+CAQI,MAAMS,SAAS,CAACR,uBAAD,CARnB;;AAAA,8CAUIc,WAAD,IACjBV,SAAS,CAACL,mBAAD,EAAsBe,WAAtB,CAXK;;AAAA,yCAaF,MAAM;AAClBJ,MAAAA,YAAY,CAACZ,oBAAD,CAAZ;AACAY,MAAAA,YAAY,CAACX,mBAAD,CAAZ;AACD,KAhBe;AAAA;;AAAA;;AAmBlB,MAAMgB,QAAQ,GAAG,IAAIH,WAAJ,EAAjB;AACA,eAAeG,QAAf","sourcesContent":["import cookie from \"react-cookies\";\n\nconst COOKIE_DOMAIN = process.env.REACT_APP_COOKIE_DOMAIN;\nconst COOKIE_REFRESH_TOKEN = \"rtk\";\nconst COOKIE_ACCESS_TOKEN = \"atk\";\nconst COOKIE_CRM_ACCESS_TOKEN = \"crm_token\";\n// const MAXIMUM_EXPIRES_TIME = 2147483647;\n\nconst cookieSetting = {\n  path: \"/\",\n  domain: COOKIE_DOMAIN,\n  // secure: true,\n  // httpOnly: true,\n  // expires: MAXIMUM_EXPIRES_TIME,\n};\n\nconst setCookie = (name: string, value: string) =>\n  cookie.save(name, value, cookieSetting);\n\nconst getCookie = (name: string) => cookie.load(name);\n\nconst removeCookie = (name: string) => cookie.remove(name, cookieSetting);\n\nclass AuthHelpers {\n  getRefreshToken = () => getCookie(COOKIE_REFRESH_TOKEN);\n\n  storeRefreshToken = (refreshToken: string) =>\n    setCookie(COOKIE_REFRESH_TOKEN, refreshToken);\n\n  getAccessToken = () => getCookie(COOKIE_ACCESS_TOKEN);\n\n  getCrmAccessToken = () => getCookie(COOKIE_CRM_ACCESS_TOKEN);\n\n  storeAccessToken = (accessToken: string) =>\n    setCookie(COOKIE_ACCESS_TOKEN, accessToken);\n\n  clearTokens = () => {\n    removeCookie(COOKIE_REFRESH_TOKEN);\n    removeCookie(COOKIE_ACCESS_TOKEN);\n  };\n}\n\nconst instance = new AuthHelpers();\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}