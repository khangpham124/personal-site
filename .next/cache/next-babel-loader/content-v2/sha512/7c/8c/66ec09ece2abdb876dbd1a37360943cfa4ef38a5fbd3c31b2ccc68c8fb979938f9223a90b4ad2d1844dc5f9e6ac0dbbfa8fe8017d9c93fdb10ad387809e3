{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/admin/Documents/personal-site/src/components/ModalCreate/CurrencyInput.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport { ErrorMessage, useField } from \"formik\";\nimport styles from \"./ModalCreate.module.css\";\n\nvar FormikTextNumber = function FormikTextNumber(props) {\n  _s();\n\n  var name = props.name,\n      label = props.label,\n      rest = _objectWithoutProperties(props, [\"name\", \"label\"]);\n\n  var _useField = useField(name),\n      _useField2 = _slicedToArray(_useField, 3),\n      _useField2$ = _useField2[1],\n      touched = _useField2$.touched,\n      value = _useField2$.value,\n      error = _useField2$.error,\n      setValue = _useField2[2].setValue;\n\n  var isError = Boolean(error) && touched;\n\n  var handleChange = function handleChange(values) {\n    var _values$floatValue;\n\n    setValue((_values$floatValue = values === null || values === void 0 ? void 0 : values.floatValue) !== null && _values$floatValue !== void 0 ? _values$floatValue : \"\");\n  };\n\n  var MIN_LIMIT = 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"font-weight-normal\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\".concat(styles[\"input-currrency\"], \" mt-2\"),\n      children: /*#__PURE__*/_jsxDEV(NumberFormat, _objectSpread(_objectSpread({}, rest), {}, {\n        thousandSeparator: true,\n        suffix: \" VND\",\n        name: name,\n        value: value,\n        error: isError,\n        helperText: isError ? error : undefined,\n        onValueChange: handleChange,\n        isAllowed: function isAllowed(values) {\n          var value = values.value;\n          return Number(value) > Number(MIN_LIMIT);\n        }\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      component: \"div\",\n      name: name,\n      className: styles[\"text--error\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(FormikTextNumber, \"/YV5n+8ATG7wVnXzknRdP0Cx3cU=\", false, function () {\n  return [useField];\n});\n\n_c = FormikTextNumber;\nexport default FormikTextNumber;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormikTextNumber\");","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/components/ModalCreate/CurrencyInput.tsx"],"names":["React","NumberFormat","ErrorMessage","useField","styles","FormikTextNumber","props","name","label","rest","touched","value","error","setValue","isError","Boolean","handleChange","values","floatValue","MIN_LIMIT","undefined","Number"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,YAAT,EAA8BC,QAA9B,QAA8C,QAA9C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAA+B;AAAA;;AAAA,MAC9CC,IAD8C,GACrBD,KADqB,CAC9CC,IAD8C;AAAA,MACxCC,KADwC,GACrBF,KADqB,CACxCE,KADwC;AAAA,MAC9BC,IAD8B,4BACrBH,KADqB;;AAAA,kBAGFH,QAAQ,CAACI,IAAD,CAHN;AAAA;AAAA;AAAA,MAG3CG,OAH2C,eAG3CA,OAH2C;AAAA,MAGlCC,KAHkC,eAGlCA,KAHkC;AAAA,MAG3BC,KAH2B,eAG3BA,KAH2B;AAAA,MAGhBC,QAHgB,iBAGhBA,QAHgB;;AAItD,MAAMC,OAAO,GAAGC,OAAO,CAACH,KAAD,CAAP,IAAkBF,OAAlC;;AAEA,MAAMM,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAgC;AAAA;;AACnDJ,IAAAA,QAAQ,uBAACI,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,UAAT,mEAAuB,EAAvB,CAAR;AACD,GAFD;;AAIA,MAAMC,SAAS,GAAG,CAAlB;AAEA,sBACE;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAA,gBAAuCX;AAAvC;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAK,MAAA,SAAS,YAAKJ,MAAM,CAAC,iBAAD,CAAX,UAAd;AAAA,6BACE,QAAC,YAAD,kCACMK,IADN;AAEE,QAAA,iBAAiB,EAAE,IAFrB;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,IAAI,EAAEF,IAJR;AAKE,QAAA,KAAK,EAAEI,KALT;AAME,QAAA,KAAK,EAAEG,OANT;AAOE,QAAA,UAAU,EAAEA,OAAO,GAAGF,KAAH,GAAWQ,SAPhC;AAQE,QAAA,aAAa,EAAEJ,YARjB;AASE,QAAA,SAAS,EAAE,mBAACC,MAAD,EAAY;AAAA,cACbN,KADa,GACHM,MADG,CACbN,KADa;AAErB,iBAAOU,MAAM,CAACV,KAAD,CAAN,GAAgBU,MAAM,CAACF,SAAD,CAA7B;AACD;AAZH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF,eAkBE,QAAC,YAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,IAAI,EAAEZ,IAFR;AAGE,MAAA,SAAS,EAAEH,MAAM,CAAC,aAAD;AAHnB;AAAA;AAAA;AAAA;AAAA,aAlBF;AAAA,kBADF;AA0BD,CAtCD;;GAAMC,gB;UAGgDF,Q;;;KAHhDE,gB;AAwCN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport { NumberFormatValues } from \"react-number-format\";\nimport NumberFormat from \"react-number-format\";\nimport { ErrorMessage, Field, useField } from \"formik\";\nimport styles from \"./ModalCreate.module.css\";\n\nconst FormikTextNumber = (props): React.ReactElement => {\n  const { name, label, ...rest } = props;\n\n  const [, { touched, value, error }, { setValue }] = useField(name);\n  const isError = Boolean(error) && touched;\n\n  const handleChange = (values: NumberFormatValues) => {\n    setValue(values?.floatValue ?? \"\");\n  };\n\n  const MIN_LIMIT = 1;\n\n  return (\n    <>\n      <label className=\"font-weight-normal\">{label}</label>\n      <div className={`${styles[\"input-currrency\"]} mt-2`}>\n        <NumberFormat\n          {...rest}\n          thousandSeparator={true}\n          suffix=\" VND\"\n          name={name}\n          value={value}\n          error={isError}\n          helperText={isError ? error : undefined}\n          onValueChange={handleChange}\n          isAllowed={(values) => {\n            const { value } = values;\n            return Number(value) > Number(MIN_LIMIT);\n          }}\n        />\n      </div>\n      <ErrorMessage\n        component=\"div\"\n        name={name}\n        className={styles[\"text--error\"]}\n      />\n    </>\n  );\n};\n\nexport default FormikTextNumber;\n"]},"metadata":{},"sourceType":"module"}