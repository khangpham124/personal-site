{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { createProjectAction, fetchProjectDetailAction, fetchProjectsAction, updateProjectAction, createProjectDesignAction, fetchProjectDesignDetailAction, fetchProjectDesignByDomainAction, validateDomainAction } from \"../actions/projects\";\nimport ProjectsInstance from \"services/identity/projects\";\nexport function* fetchProjectsSaga(action) {\n  try {\n    const {\n      pageIndex,\n      pageSize,\n      cb\n    } = action.payload;\n    const response = yield call(ProjectsInstance.fetchProjects, pageIndex, pageSize);\n    yield put(fetchProjectsAction.success(response));\n    cb === null || cb === void 0 ? void 0 : cb();\n  } catch (err) {\n    yield put(fetchProjectsAction.failure(err));\n  }\n}\nexport function* fetchProjectDetailSaga(action) {\n  try {\n    const {\n      id,\n      cb\n    } = action.payload;\n    const response = yield call(ProjectsInstance.fetchProjectDetail, id);\n    yield put(fetchProjectDetailAction.success(response));\n    cb === null || cb === void 0 ? void 0 : cb();\n  } catch (err) {\n    yield put(fetchProjectDetailAction.failure(err));\n  }\n}\nexport function* createProjectSaga(action) {\n  try {\n    const {\n      body,\n      cb\n    } = action.payload;\n    const response = yield call(ProjectsInstance.createProject, body);\n    cb === null || cb === void 0 ? void 0 : cb(response);\n  } catch (err) {\n    yield put(createProjectAction.failure(err));\n  }\n}\nexport function* updateProjectSaga(action) {\n  try {\n    const {\n      id,\n      body,\n      cb\n    } = action.payload;\n    yield call(ProjectsInstance.updateProject, id, body);\n    cb === null || cb === void 0 ? void 0 : cb();\n  } catch (err) {\n    yield put(updateProjectAction.failure(err));\n  }\n}\nexport function* validateDomainSaga(action) {\n  try {\n    const {\n      id,\n      cb\n    } = action.payload;\n    yield call(ProjectsInstance.validateDomain, id);\n    cb === null || cb === void 0 ? void 0 : cb();\n  } catch (err) {\n    yield put(validateDomainAction.failure(err));\n  }\n}\nexport function* createProjectDesignSaga(action) {\n  try {\n    const {\n      id,\n      body,\n      cb\n    } = action.payload;\n    yield call(ProjectsInstance.createProjectDesign, id, body);\n    yield put(createProjectDesignAction.success());\n    cb === null || cb === void 0 ? void 0 : cb();\n  } catch (err) {\n    yield put(createProjectDesignAction.failure(err));\n  }\n}\nexport function* fetchProjectDesignDetailSaga(action) {\n  try {\n    const {\n      id,\n      cb\n    } = action.payload;\n    const response = yield call(ProjectsInstance.fetchProjectDesignDetail, id);\n    yield put(fetchProjectDesignDetailAction.success(response));\n    cb === null || cb === void 0 ? void 0 : cb();\n  } catch (err) {\n    yield put(fetchProjectDesignDetailAction.failure(err));\n  }\n}\nexport function* fetchProjectDesignByDomainSaga(action) {\n  try {\n    const {\n      domainName,\n      cb\n    } = action.payload;\n    const response = yield call(ProjectsInstance.fetchProjectDesignByDomain, domainName);\n    yield put(fetchProjectDesignByDomainAction.success(response));\n    cb === null || cb === void 0 ? void 0 : cb();\n  } catch (err) {\n    yield put(fetchProjectDesignByDomainAction.failure(err));\n  }\n}\nexport default function* root() {\n  yield all([takeLatest(fetchProjectsAction.request.type, fetchProjectsSaga), takeLatest(fetchProjectDetailAction.request.type, fetchProjectDetailSaga), takeLatest(createProjectAction.request.type, createProjectSaga), takeLatest(updateProjectAction.request.type, updateProjectSaga), takeLatest(validateDomainAction.request.type, validateDomainSaga), takeLatest(createProjectDesignAction.request.type, createProjectDesignSaga), takeLatest(fetchProjectDesignDetailAction.request.type, fetchProjectDesignDetailSaga), takeLatest(fetchProjectDesignByDomainAction.request.type, fetchProjectDesignByDomainSaga)]);\n}","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/sagas/projects.ts"],"names":["all","call","put","takeLatest","createProjectAction","fetchProjectDetailAction","fetchProjectsAction","updateProjectAction","createProjectDesignAction","fetchProjectDesignDetailAction","fetchProjectDesignByDomainAction","validateDomainAction","ProjectsInstance","fetchProjectsSaga","action","pageIndex","pageSize","cb","payload","response","fetchProjects","success","err","failure","fetchProjectDetailSaga","id","fetchProjectDetail","createProjectSaga","body","createProject","updateProjectSaga","updateProject","validateDomainSaga","validateDomain","createProjectDesignSaga","createProjectDesign","fetchProjectDesignDetailSaga","fetchProjectDesignDetail","fetchProjectDesignByDomainSaga","domainName","fetchProjectDesignByDomain","root","request","type"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { ActionType } from \"deox\";\n\nimport {\n  createProjectAction,\n  fetchProjectDetailAction,\n  fetchProjectsAction,\n  updateProjectAction,\n  createProjectDesignAction,\n  fetchProjectDesignDetailAction,\n  fetchProjectDesignByDomainAction,\n  validateDomainAction\n} from \"../actions/projects\";\nimport ProjectsInstance from \"services/identity/projects\";\nimport {\n  TFetchProjectDesignByDomainResponse,\n  TFetchProjectDesignDetailResponse,\n  TFetchProjectDetailResponse,\n  TFetchProjectsResponse,\n  TProject,\n} from \"services/identity/projects/types\";\n\nexport function* fetchProjectsSaga(\n  action: ActionType<typeof fetchProjectsAction.request>\n): Generator {\n  try {\n    const { pageIndex, pageSize, cb } = action.payload;\n    const response = yield call(\n      ProjectsInstance.fetchProjects,\n      pageIndex,\n      pageSize\n    );\n    yield put(fetchProjectsAction.success(response as TFetchProjectsResponse));\n    cb?.();\n  } catch (err) {\n    yield put(fetchProjectsAction.failure(err));\n  }\n}\n\nexport function* fetchProjectDetailSaga(\n  action: ActionType<typeof fetchProjectDetailAction.request>\n): Generator {\n  try {\n    const { id, cb } = action.payload;\n    const response = yield call(ProjectsInstance.fetchProjectDetail, id);\n    yield put(\n      fetchProjectDetailAction.success(response as TFetchProjectDetailResponse)\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchProjectDetailAction.failure(err));\n  }\n}\n\nexport function* createProjectSaga(\n  action: ActionType<typeof createProjectAction.request>\n): Generator {\n  try {\n    const { body, cb } = action.payload;\n    const response = yield call(ProjectsInstance.createProject, body);\n    cb?.(response as TProject);\n  } catch (err) {\n    yield put(createProjectAction.failure(err));\n  }\n}\n\nexport function* updateProjectSaga(\n  action: ActionType<typeof updateProjectAction.request>\n): Generator {\n  try {\n    const { id, body, cb } = action.payload;\n    yield call(ProjectsInstance.updateProject, id, body);\n    cb?.();\n  } catch (err) {\n    yield put(updateProjectAction.failure(err));\n  }\n}\n\nexport function* validateDomainSaga(\n  action: ActionType<typeof validateDomainAction.request>\n): Generator {\n  try {\n    const { id, cb } = action.payload;\n    yield call(ProjectsInstance.validateDomain, id);\n    cb?.();\n  } catch (err) {\n    yield put(validateDomainAction.failure(err));\n  }\n}\n\nexport function* createProjectDesignSaga(\n  action: ActionType<typeof createProjectDesignAction.request>\n): Generator {\n  try {\n    const { id, body, cb } = action.payload;\n    yield call(ProjectsInstance.createProjectDesign, id, body);\n    yield put(createProjectDesignAction.success());\n    cb?.();\n  } catch (err) {\n    yield put(createProjectDesignAction.failure(err));\n  }\n}\n\nexport function* fetchProjectDesignDetailSaga(\n  action: ActionType<typeof fetchProjectDesignDetailAction.request>\n): Generator {\n  try {\n    const { id, cb } = action.payload;\n    const response = yield call(ProjectsInstance.fetchProjectDesignDetail, id);\n    yield put(\n      fetchProjectDesignDetailAction.success(\n        response as TFetchProjectDesignDetailResponse\n      )\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchProjectDesignDetailAction.failure(err));\n  }\n}\n\nexport function* fetchProjectDesignByDomainSaga(\n  action: ActionType<typeof fetchProjectDesignByDomainAction.request>\n): Generator {\n  try {\n    const { domainName, cb } = action.payload;\n    const response = yield call(\n      ProjectsInstance.fetchProjectDesignByDomain,\n      domainName\n    );\n    yield put(\n      fetchProjectDesignByDomainAction.success(\n        response as TFetchProjectDesignByDomainResponse\n      )\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchProjectDesignByDomainAction.failure(err));\n  }\n}\n\nexport default function* root(): Generator {\n  yield all([\n    takeLatest(fetchProjectsAction.request.type, fetchProjectsSaga),\n    takeLatest(fetchProjectDetailAction.request.type, fetchProjectDetailSaga),\n    takeLatest(createProjectAction.request.type, createProjectSaga),\n    takeLatest(updateProjectAction.request.type, updateProjectSaga),\n    takeLatest(validateDomainAction.request.type, validateDomainSaga),\n    takeLatest(createProjectDesignAction.request.type, createProjectDesignSaga),\n    takeLatest(\n      fetchProjectDesignDetailAction.request.type,\n      fetchProjectDesignDetailSaga\n    ),\n    takeLatest(\n      fetchProjectDesignByDomainAction.request.type,\n      fetchProjectDesignByDomainSaga\n    ),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}