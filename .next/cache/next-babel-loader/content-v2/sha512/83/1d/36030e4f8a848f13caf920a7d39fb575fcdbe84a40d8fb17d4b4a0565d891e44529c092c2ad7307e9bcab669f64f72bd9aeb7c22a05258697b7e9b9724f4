{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport HttpClient from '../../../utils/axios/instance';\nimport { catchAxiosError } from '../../../utils/axios/error';\nimport { crmPlatform } from \"src/services/identity\";\nimport { USERS_API_URL, PLATFORM_ACCESSES, INVITE_USER } from '../index';\n// import { TUsersResponse, ItemsUser } from './types';\nexport class usersAPI extends HttpClient {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"getAllUsers\", async (pageNumber, filters) => {\n      const filtering = filters && Object.keys(filters).length ? `filter=${JSON.stringify(filters)}&` : '';\n      const paging = pageNumber ? `pageIndex=${pageNumber}` : 'pageIndex=1';\n      const response = await this.instance.get(`${crmPlatform}/${USERS_API_URL}?${filtering}${paging}&pageSize=20`).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"getUserDetailInCompanyByID\", async (userId, companyId) => {\n      const response = await this.instance.get(`${crmPlatform}/${USERS_API_URL}/${userId}/company/${companyId}`).catch(catchAxiosError);\n      return response.data;\n    });\n\n    _defineProperty(this, \"getDetailUser\", async IDUser => {\n      const response = await this.instance.get(`${crmPlatform}/${USERS_API_URL}/${IDUser}`).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"updateUserDetail\", async (userId, companyId, requestBody) => {\n      const response = await this.instance.patch(`${crmPlatform}/${USERS_API_URL}/${userId}/company/${companyId}`, requestBody).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"getPlatformAccessesbyID\", async IDUser => {\n      const response = await this.instance.patch(`${crmPlatform}/${PLATFORM_ACCESSES}/${IDUser}`).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"removeUser\", async (IDUser, requestBody) => {\n      const response = await this.instance.delete(`${crmPlatform}/user-role-company/${IDUser}`, requestBody).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"inviteNewUser\", async requestBody => {\n      const response = await this.instance.post(`${crmPlatform}/${INVITE_USER}`, requestBody).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"firstSetupUserDetail\", async (IDUser, requestBody) => {\n      const response = await this.instance.post(`${crmPlatform}/${USERS_API_URL}/${IDUser}/authentication`, requestBody).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"lastAccessCompany\", async (IDUser, IDCompany) => {\n      const response = await this.instance.patch(`${crmPlatform}/${USERS_API_URL}/${IDUser}/company/${IDCompany}/last-access`).catch(catchAxiosError);\n      return response;\n    });\n\n    _defineProperty(this, \"getListCompany\", async (IDUser, pageIndex, pageSize) => {\n      const response = await this.instance.get(`${crmPlatform}/${USERS_API_URL}/${IDUser}/company-list?pageIndex=${pageIndex ? pageIndex : 1}${pageSize ? `&pageSize=${pageSize}` : `&pageSize=20`}&sort={\"lastAccess\": \"DESC\"}`).catch(catchAxiosError);\n      return response;\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/services/identity/users/index.ts"],"names":["HttpClient","catchAxiosError","crmPlatform","USERS_API_URL","PLATFORM_ACCESSES","INVITE_USER","usersAPI","pageNumber","filters","filtering","Object","keys","length","JSON","stringify","paging","response","instance","get","catch","userId","companyId","data","IDUser","requestBody","patch","delete","post","IDCompany","pageIndex","pageSize"],"mappings":"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","sourcesContent":["import HttpClient from '../../../utils/axios/instance';\nimport { catchAxiosError } from '../../../utils/axios/error';\nimport { IResponse, IConfig } from '../../../utils/axios/entities';\nimport { crmPlatform } from \"src/services/identity\";\nimport {\n  baseUrl,\n  USERS_API_URL,\n  PLATFORM_ACCESSES,\n  INVITE_USER,\n  CONFIRM_INVITE_USER,\n  COMPANY_API_URL\n} from '../index';\nimport { IUserDetailInCompany } from './types';\n// import { TUsersResponse, ItemsUser } from './types';\n\nexport class usersAPI extends HttpClient {\n  public getAllUsers = async (pageNumber?: number, filters?: any): Promise<IResponse> => {\n    const filtering = filters && Object.keys(filters).length ? `filter=${JSON.stringify(filters)}&` : '';\n    const paging = pageNumber ? `pageIndex=${pageNumber}` : 'pageIndex=1';\n    const response: IResponse = await this.instance.get(`${crmPlatform}/${USERS_API_URL}?${filtering}${paging}&pageSize=20`).catch(catchAxiosError);\n    return response;\n  };\n\n  public getUserDetailInCompanyByID = async (userId: string, companyId: string): Promise<IUserDetailInCompany> => {\n    const response: IResponse = await this.instance.get(`${crmPlatform}/${USERS_API_URL}/${userId}/company/${companyId}`).catch(catchAxiosError);\n    return response.data;\n  };\n\n  public getDetailUser = async (IDUser: any): Promise<IResponse> => {\n    const response: IResponse = await this.instance.get(`${crmPlatform}/${USERS_API_URL}/${IDUser}`).catch(catchAxiosError);\n    return response;\n  };\n\n  public updateUserDetail = async (userId: string, companyId: string, requestBody?: any): Promise<IResponse> => {\n    const response: IResponse = await this.instance.patch(`${crmPlatform}/${USERS_API_URL}/${userId}/company/${companyId}`, requestBody).catch(catchAxiosError);\n    return response;\n  };\n\n  public getPlatformAccessesbyID = async (IDUser: string): Promise<IResponse> => {\n    const response: IResponse = await this.instance.patch(`${crmPlatform}/${PLATFORM_ACCESSES}/${IDUser}`).catch(catchAxiosError);\n    return response;\n  };\n\n  public removeUser = async (IDUser: string, requestBody: any): Promise<IResponse> => {\n    const response: IResponse = await this.instance.delete(`${crmPlatform}/user-role-company/${IDUser}`, requestBody).catch(catchAxiosError);\n    return response;\n  };\n\n  public inviteNewUser = async (requestBody?: any): Promise<IResponse> => {\n    const response: IResponse = await this.instance.post(`${crmPlatform}/${INVITE_USER}`, requestBody).catch(catchAxiosError);\n    return response;\n  };\n\n\n  public firstSetupUserDetail = async (IDUser: string, requestBody?: any): Promise<IResponse> => {\n    const response: IResponse = await this.instance.post(`${crmPlatform}/${USERS_API_URL}/${IDUser}/authentication`, requestBody).catch(catchAxiosError);\n    return response;\n  };\n\n  public lastAccessCompany = async (IDUser: string, IDCompany: string): Promise<IResponse> => {\n    const response: IResponse = await this.instance.patch(`${crmPlatform}/${USERS_API_URL}/${IDUser}/company/${IDCompany}/last-access`).catch(catchAxiosError);\n    return response;\n  };\n\n  public getListCompany = async (IDUser: string, pageIndex?: number, pageSize?:number) : Promise<IResponse> => {\n    const response: IResponse = await this.instance.get(`${crmPlatform}/${USERS_API_URL}/${IDUser}/company-list?pageIndex=${pageIndex ? pageIndex : 1}${pageSize ? `&pageSize=${pageSize}`: `&pageSize=20` }&sort={\"lastAccess\": \"DESC\"}`).catch(catchAxiosError);\n    return response;\n  };\n\n}"]},"metadata":{},"sourceType":"module"}