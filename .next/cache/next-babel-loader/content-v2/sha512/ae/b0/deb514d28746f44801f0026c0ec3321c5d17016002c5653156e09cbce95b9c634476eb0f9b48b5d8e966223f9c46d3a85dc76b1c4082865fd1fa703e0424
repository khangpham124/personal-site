{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchCustomersSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchCustomerSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(createCustomerSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(updateCustomerSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(root);\n\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { createCustomerAction, fetchCustomerAction, fetchCustomersAction, updateCustomerAction } from \"../actions/customers\";\nimport CustomersInstance from \"services/identity/customers\";\nexport function fetchCustomersSaga(action) {\n  var _action$payload, pageIndex, pageSize, optionalParams, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchCustomersSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _action$payload = action.payload, pageIndex = _action$payload.pageIndex, pageSize = _action$payload.pageSize, optionalParams = _action$payload.optionalParams, cb = _action$payload.cb;\n          _context.next = 4;\n          return call(CustomersInstance.fetchCustomers, pageIndex, pageSize, optionalParams);\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return put(fetchCustomersAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put(fetchCustomersAction.failure(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\nexport function fetchCustomerSaga(action) {\n  var _action$payload2, id, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchCustomerSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _action$payload2 = action.payload, id = _action$payload2.id, cb = _action$payload2.cb;\n          _context2.next = 4;\n          return call(CustomersInstance.fetchCustomer, id);\n\n        case 4:\n          response = _context2.sent;\n          _context2.next = 7;\n          return put(fetchCustomerAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put(fetchCustomerAction.failure(_context2.t0));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\nexport function createCustomerSaga(action) {\n  var _action$payload3, body, cb, response;\n\n  return _regeneratorRuntime.wrap(function createCustomerSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _action$payload3 = action.payload, body = _action$payload3.body, cb = _action$payload3.cb;\n          _context3.next = 4;\n          return call(CustomersInstance.createCustomer, body);\n\n        case 4:\n          response = _context3.sent;\n          _context3.next = 7;\n          return put(createCustomerAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 14;\n          return put(createCustomerAction.failure(_context3.t0));\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\nexport function updateCustomerSaga(action) {\n  var _action$payload4, id, body, cb;\n\n  return _regeneratorRuntime.wrap(function updateCustomerSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _action$payload4 = action.payload, id = _action$payload4.id, body = _action$payload4.body, cb = _action$payload4.cb;\n          _context4.next = 4;\n          return call(CustomersInstance.updateCustomer, id, body);\n\n        case 4:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context4.next = 11;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 11;\n          return put(updateCustomerAction.failure(_context4.t0));\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n}\nexport default function root() {\n  return _regeneratorRuntime.wrap(function root$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([takeLatest(fetchCustomersAction.request.type, fetchCustomersSaga), takeLatest(fetchCustomerAction.request.type, fetchCustomerSaga), takeLatest(createCustomerAction.request.type, createCustomerSaga), takeLatest(updateCustomerAction.request.type, updateCustomerSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/sagas/customers.ts"],"names":["fetchCustomersSaga","fetchCustomerSaga","createCustomerSaga","updateCustomerSaga","root","all","call","put","takeLatest","createCustomerAction","fetchCustomerAction","fetchCustomersAction","updateCustomerAction","CustomersInstance","action","payload","pageIndex","pageSize","optionalParams","cb","fetchCustomers","response","success","failure","id","fetchCustomer","body","createCustomer","updateCustomer","request","type"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { ActionType } from \"deox\";\n\nimport {\n  createCustomerAction,\n  fetchCustomerAction,\n  fetchCustomersAction,\n  updateCustomerAction,\n} from \"../actions/customers\";\nimport CustomersInstance from \"services/identity/customers\";\nimport {\n  TCreateCustomerResponse,\n  TFetchCustomerResponse,\n  TFetchCustomersResponse,\n  TUpdateCustomerResponse,\n} from \"services/identity/customers/types\";\n\nexport function* fetchCustomersSaga(\n  action: ActionType<typeof fetchCustomersAction.request>\n): Generator {\n  try {\n    const { pageIndex, pageSize, optionalParams, cb } = action.payload;\n    const response = yield call(\n      CustomersInstance.fetchCustomers,\n      pageIndex,\n      pageSize,\n      optionalParams\n    );\n    yield put(\n      fetchCustomersAction.success(response as TFetchCustomersResponse)\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchCustomersAction.failure(err));\n  }\n}\n\nexport function* fetchCustomerSaga(\n  action: ActionType<typeof fetchCustomerAction.request>\n): Generator {\n  try {\n    const { id, cb } = action.payload;\n    const response = yield call(CustomersInstance.fetchCustomer, id);\n    yield put(fetchCustomerAction.success(response as TFetchCustomerResponse));\n    cb?.();\n  } catch (err) {\n    yield put(fetchCustomerAction.failure(err));\n  }\n}\n\nexport function* createCustomerSaga(\n  action: ActionType<typeof createCustomerAction.request>\n): Generator {\n  try {\n    const { body, cb } = action.payload;\n    const response = yield call(CustomersInstance.createCustomer, body);\n    yield put(\n      createCustomerAction.success(response as TCreateCustomerResponse)\n    );\n    cb?.();\n  } catch (err) {\n    yield put(createCustomerAction.failure(err));\n  }\n}\n\nexport function* updateCustomerSaga(\n  action: ActionType<typeof updateCustomerAction.request>\n): Generator {\n  try {\n    const { id, body, cb } = action.payload;\n    yield call(CustomersInstance.updateCustomer, id, body);\n    cb?.();\n  } catch (err) {\n    yield put(updateCustomerAction.failure(err));\n  }\n}\n\nexport default function* root(): Generator {\n  yield all([\n    takeLatest(fetchCustomersAction.request.type, fetchCustomersSaga),\n    takeLatest(fetchCustomerAction.request.type, fetchCustomerSaga),\n    takeLatest(createCustomerAction.request.type, createCustomerSaga),\n    takeLatest(updateCustomerAction.request.type, updateCustomerSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}