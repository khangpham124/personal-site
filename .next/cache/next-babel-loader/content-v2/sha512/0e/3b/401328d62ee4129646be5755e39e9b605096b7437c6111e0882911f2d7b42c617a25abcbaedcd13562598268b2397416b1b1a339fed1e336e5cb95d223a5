{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createReducer } from \"deox\";\nimport { fetchProjectDesignByDomainAction, fetchProjectDesignDetailAction, fetchProjectDetailAction, fetchProjectsAction } from \"../actions/projects\";\nconst initialState = {\n  all: undefined,\n  detail: undefined,\n  designDetail: undefined,\n  designByDomain: undefined\n};\nconst projectsReducer = createReducer(initialState, handleAction => [handleAction(fetchProjectsAction.success, (state, {\n  payload\n}) => _objectSpread(_objectSpread({}, state), {}, {\n  all: payload.projects\n})), handleAction(fetchProjectDetailAction.success, (state, {\n  payload\n}) => _objectSpread(_objectSpread({}, state), {}, {\n  detail: payload.project\n})), handleAction(fetchProjectDesignDetailAction.success, (state, {\n  payload\n}) => _objectSpread(_objectSpread({}, state), {}, {\n  designDetail: payload.project\n})), handleAction(fetchProjectDesignByDomainAction.success, (state, {\n  payload\n}) => _objectSpread(_objectSpread({}, state), {}, {\n  designByDomain: payload.project\n}))]);\nexport default projectsReducer;","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/reducers/projects.ts"],"names":["createReducer","fetchProjectDesignByDomainAction","fetchProjectDesignDetailAction","fetchProjectDetailAction","fetchProjectsAction","initialState","all","undefined","detail","designDetail","designByDomain","projectsReducer","handleAction","success","state","payload","projects","project"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,MAA9B;AAEA,SACEC,gCADF,EAEEC,8BAFF,EAGEC,wBAHF,EAIEC,mBAJF,QAKO,qBALP;AAoBA,MAAMC,YAA4B,GAAG;AACnCC,EAAAA,GAAG,EAAEC,SAD8B;AAEnCC,EAAAA,MAAM,EAAED,SAF2B;AAGnCE,EAAAA,YAAY,EAAEF,SAHqB;AAInCG,EAAAA,cAAc,EAAEH;AAJmB,CAArC;AAOA,MAAMI,eAAe,GAAGX,aAAa,CAACK,YAAD,EAAgBO,YAAD,IAAkB,CACpEA,YAAY,CAACR,mBAAmB,CAACS,OAArB,EAA8B,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,qCACrCD,KADqC;AAExCR,EAAAA,GAAG,EAAES,OAAO,CAACC;AAF2B,EAA9B,CADwD,EAKpEJ,YAAY,CAACT,wBAAwB,CAACU,OAA1B,EAAmC,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,qCAC1CD,KAD0C;AAE7CN,EAAAA,MAAM,EAAEO,OAAO,CAACE;AAF6B,EAAnC,CALwD,EASpEL,YAAY,CAACV,8BAA8B,CAACW,OAAhC,EAAyC,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,qCAChDD,KADgD;AAEnDL,EAAAA,YAAY,EAAEM,OAAO,CAACE;AAF6B,EAAzC,CATwD,EAapEL,YAAY,CAACX,gCAAgC,CAACY,OAAlC,EAA2C,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,qCAClDD,KADkD;AAErDJ,EAAAA,cAAc,EAAEK,OAAO,CAACE;AAF6B,EAA3C,CAbwD,CAAjC,CAArC;AAmBA,eAAeN,eAAf","sourcesContent":["import { createReducer } from \"deox\";\n\nimport {\n  fetchProjectDesignByDomainAction,\n  fetchProjectDesignDetailAction,\n  fetchProjectDetailAction,\n  fetchProjectsAction,\n} from \"../actions/projects\";\nimport {\n  TFetchProjectDetailResponse,\n  TFetchProjectsResponse,\n  TFetchProjectDesignDetailResponse,\n  TFetchProjectDesignByDomainResponse,\n} from \"services/identity/projects/types\";\n\ntype TProjectsState = {\n  all?: TFetchProjectsResponse;\n  detail?: TFetchProjectDetailResponse;\n  designDetail?: TFetchProjectDesignDetailResponse;\n  designByDomain?: TFetchProjectDesignByDomainResponse;\n};\n\nconst initialState: TProjectsState = {\n  all: undefined,\n  detail: undefined,\n  designDetail: undefined,\n  designByDomain: undefined,\n};\n\nconst projectsReducer = createReducer(initialState, (handleAction) => [\n  handleAction(fetchProjectsAction.success, (state, { payload }) => ({\n    ...state,\n    all: payload.projects,\n  })),\n  handleAction(fetchProjectDetailAction.success, (state, { payload }) => ({\n    ...state,\n    detail: payload.project,\n  })),\n  handleAction(fetchProjectDesignDetailAction.success, (state, { payload }) => ({\n    ...state,\n    designDetail: payload.project,\n  })),\n  handleAction(fetchProjectDesignByDomainAction.success, (state, { payload }) => ({\n    ...state,\n    designByDomain: payload.project,\n  })),\n]);\n\nexport default projectsReducer;\n"]},"metadata":{},"sourceType":"module"}