{"ast":null,"code":"import _defineProperty from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createReducer } from 'deox';\nimport { fetchLeadAction, fetchLeadsAction } from '../actions/leads';\nvar initialState = {\n  data: undefined,\n  leadById: undefined\n};\nvar leadsReducer = createReducer(initialState, function (handleAction) {\n  return [handleAction(fetchLeadsAction.success, function (state, _ref) {\n    var payload = _ref.payload;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      data: payload.leads\n    });\n  }), handleAction(fetchLeadAction.success, function (state, _ref2) {\n    var payload = _ref2.payload;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      leadById: payload.lead\n    });\n  })];\n});\nexport default leadsReducer;","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/reducers/leads.ts"],"names":["createReducer","fetchLeadAction","fetchLeadsAction","initialState","data","undefined","leadById","leadsReducer","handleAction","success","state","payload","leads","lead"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,MAA9B;AAEA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,kBAAlD;AAQA,IAAMC,YAAyB,GAAG;AAChCC,EAAAA,IAAI,EAAEC,SAD0B;AAEhCC,EAAAA,QAAQ,EAAED;AAFsB,CAAlC;AAKA,IAAME,YAAY,GAAGP,aAAa,CAACG,YAAD,EAAe,UAACK,YAAD;AAAA,SAAkB,CACjEA,YAAY,CAACN,gBAAgB,CAACO,OAAlB,EAA2B,UAACC,KAAD;AAAA,QAAUC,OAAV,QAAUA,OAAV;AAAA,2CAClCD,KADkC;AAErCN,MAAAA,IAAI,EAAEO,OAAO,CAACC;AAFuB;AAAA,GAA3B,CADqD,EAKjEJ,YAAY,CAACP,eAAe,CAACQ,OAAjB,EAA0B,UAACC,KAAD;AAAA,QAAUC,OAAV,SAAUA,OAAV;AAAA,2CACjCD,KADiC;AAEpCJ,MAAAA,QAAQ,EAAEK,OAAO,CAACE;AAFkB;AAAA,GAA1B,CALqD,CAAlB;AAAA,CAAf,CAAlC;AAWA,eAAeN,YAAf","sourcesContent":["import { createReducer } from 'deox';\n\nimport { fetchLeadAction, fetchLeadsAction } from '../actions/leads';\nimport { TFetchLeadResponse, TFetchLeadsResponse } from 'services/identity/leads/types';\n\ntype TLeadsState = {\n  data?: TFetchLeadsResponse;\n  leadById?: TFetchLeadResponse;\n};\n\nconst initialState: TLeadsState = {\n  data: undefined,\n  leadById: undefined,\n};\n\nconst leadsReducer = createReducer(initialState, (handleAction) => [\n  handleAction(fetchLeadsAction.success, (state, { payload }) => ({\n    ...state,\n    data: payload.leads,\n  })),\n  handleAction(fetchLeadAction.success, (state, { payload }) => ({\n    ...state,\n    leadById: payload.lead,\n  })),\n]);\n\nexport default leadsReducer;\n"]},"metadata":{},"sourceType":"module"}