{"ast":null,"code":"import { createActionCreator } from \"deox\";\nimport { ECustomersActions } from \"./constants\";\nexport var fetchCustomersAction = {\n  request: createActionCreator(ECustomersActions.FETCH_CUSTOMERS_REQUEST, function (resolve) {\n    return function (pageIndex, pageSize, companyId, optionalParams, cb) {\n      return resolve({\n        pageIndex: pageIndex,\n        pageSize: pageSize,\n        companyId: companyId,\n        optionalParams: optionalParams,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(ECustomersActions.FETCH_CUSTOMERS_SUCCESS, function (resolve) {\n    return function (customers) {\n      return resolve({\n        customers: customers\n      });\n    };\n  }),\n  failure: createActionCreator(ECustomersActions.FETCH_CUSTOMERS_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var fetchCustomerAction = {\n  request: createActionCreator(ECustomersActions.FETCH_CUSTOMER_REQUEST, function (resolve) {\n    return function (id, cb) {\n      return resolve({\n        id: id,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(ECustomersActions.FETCH_CUSTOMER_SUCCESS, function (resolve) {\n    return function (customer) {\n      return resolve({\n        customer: customer\n      });\n    };\n  }),\n  failure: createActionCreator(ECustomersActions.FETCH_CUSTOMER_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var createCustomerAction = {\n  request: createActionCreator(ECustomersActions.CREATE_CUSTOMER_REQUEST, function (resolve) {\n    return function (body, cb) {\n      return resolve({\n        body: body,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(ECustomersActions.CREATE_CUSTOMER_SUCCESS, function (resolve) {\n    return function (customer) {\n      return resolve({\n        customer: customer\n      });\n    };\n  }),\n  failure: createActionCreator(ECustomersActions.CREATE_CUSTOMER_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};\nexport var updateCustomerAction = {\n  request: createActionCreator(ECustomersActions.UPDATE_CUSTOMER_REQUEST, function (resolve) {\n    return function (id, body, cb) {\n      return resolve({\n        id: id,\n        body: body,\n        cb: cb\n      });\n    };\n  }),\n  success: createActionCreator(ECustomersActions.UPDATE_CUSTOMER_SUCCESS, function (resolve) {\n    return function (customer) {\n      return resolve({\n        customer: customer\n      });\n    };\n  }),\n  failure: createActionCreator(ECustomersActions.UPDATE_CUSTOMER_FAILED, function (resolve) {\n    return function (error) {\n      return resolve({\n        error: error\n      });\n    };\n  })\n};","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/actions/customers/index.ts"],"names":["createActionCreator","ECustomersActions","fetchCustomersAction","request","FETCH_CUSTOMERS_REQUEST","resolve","pageIndex","pageSize","companyId","optionalParams","cb","success","FETCH_CUSTOMERS_SUCCESS","customers","failure","FETCH_CUSTOMERS_FAILED","error","fetchCustomerAction","FETCH_CUSTOMER_REQUEST","id","FETCH_CUSTOMER_SUCCESS","customer","FETCH_CUSTOMER_FAILED","createCustomerAction","CREATE_CUSTOMER_REQUEST","body","CREATE_CUSTOMER_SUCCESS","CREATE_CUSTOMER_FAILED","updateCustomerAction","UPDATE_CUSTOMER_REQUEST","UPDATE_CUSTOMER_SUCCESS","UPDATE_CUSTOMER_FAILED"],"mappings":"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","sourcesContent":["import { createActionCreator } from \"deox\";\n\nimport { ECustomersActions } from \"./constants\";\nimport { TCreateCustomerBody, TCreateCustomerResponse, TFetchCustomerResponse, TFetchCustomersResponse, TUpdateCustomerBody, TUpdateCustomerResponse } from \"services/identity/customers/types\";\n\nexport const fetchCustomersAction = {\n  request: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMERS_REQUEST,\n    (resolve) => (pageIndex: number, pageSize: number, companyId: string, optionalParams?: any, cb?: () => void) =>\n      resolve({ pageIndex, pageSize, companyId,  optionalParams, cb })\n  ),\n  success: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMERS_SUCCESS,\n    (resolve) => (customers: TFetchCustomersResponse) => resolve({ customers })\n  ),\n  failure: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMERS_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const fetchCustomerAction = {\n  request: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMER_REQUEST,\n    (resolve) => (id: string, cb?: () => void) =>\n      resolve({ id, cb })\n  ),\n  success: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMER_SUCCESS,\n    (resolve) => (customer: TFetchCustomerResponse) => resolve({ customer })\n  ),\n  failure: createActionCreator(\n    ECustomersActions.FETCH_CUSTOMER_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const createCustomerAction = {\n  request: createActionCreator(\n    ECustomersActions.CREATE_CUSTOMER_REQUEST,\n    (resolve) => (body: TCreateCustomerBody, cb?: () => void) =>\n      resolve({ body, cb })\n  ),\n  success: createActionCreator(\n    ECustomersActions.CREATE_CUSTOMER_SUCCESS,\n    (resolve) => (customer: TCreateCustomerResponse) => resolve({ customer })\n  ),\n  failure: createActionCreator(\n    ECustomersActions.CREATE_CUSTOMER_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n\nexport const updateCustomerAction = {\n  request: createActionCreator(\n    ECustomersActions.UPDATE_CUSTOMER_REQUEST,\n    (resolve) => (id: string, body: TUpdateCustomerBody, cb?: () => void) =>\n      resolve({ id, body, cb })\n  ),\n  success: createActionCreator(\n    ECustomersActions.UPDATE_CUSTOMER_SUCCESS,\n    (resolve) => (customer: TUpdateCustomerResponse) => resolve({ customer })\n  ),\n  failure: createActionCreator(\n    ECustomersActions.UPDATE_CUSTOMER_FAILED,\n    (resolve) => (error) => resolve({ error })\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}