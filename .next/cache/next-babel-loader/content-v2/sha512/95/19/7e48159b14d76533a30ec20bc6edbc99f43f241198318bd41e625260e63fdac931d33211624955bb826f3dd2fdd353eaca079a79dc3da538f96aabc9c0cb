{"ast":null,"code":"import _defineProperty from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createReducer } from \"deox\";\nimport { fetchLogCallsAction } from \"../actions/log-calls\";\nvar initialState = {\n  all: undefined\n};\nvar logCallsReducer = createReducer(initialState, function (handleAction) {\n  return [handleAction(fetchLogCallsAction.success, function (state, _ref) {\n    var payload = _ref.payload;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      all: payload.logCalls\n    });\n  })];\n});\nexport default logCallsReducer;","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/reducers/log-calls.ts"],"names":["createReducer","fetchLogCallsAction","initialState","all","undefined","logCallsReducer","handleAction","success","state","payload","logCalls"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,MAA9B;AAEA,SACEC,mBADF,QAEO,sBAFP;AAWA,IAAMC,YAA4B,GAAG;AACnCC,EAAAA,GAAG,EAAEC;AAD8B,CAArC;AAIA,IAAMC,eAAe,GAAGL,aAAa,CAACE,YAAD,EAAe,UAACI,YAAD;AAAA,SAAkB,CACpEA,YAAY,CAACL,mBAAmB,CAACM,OAArB,EAA8B,UAACC,KAAD;AAAA,QAAUC,OAAV,QAAUA,OAAV;AAAA,2CACrCD,KADqC;AAExCL,MAAAA,GAAG,EAAEM,OAAO,CAACC;AAF2B;AAAA,GAA9B,CADwD,CAAlB;AAAA,CAAf,CAArC;AAOA,eAAeL,eAAf","sourcesContent":["import { createReducer } from \"deox\";\n\nimport {\n  fetchLogCallsAction,\n} from \"../actions/log-calls\";\nimport {\n  TFetchLogCallsResponse,\n} from \"services/identity/log-calls/types\";\n\ntype TLogCallsState = {\n  all?: TFetchLogCallsResponse;\n};\n\nconst initialState: TLogCallsState = {\n  all: undefined,\n};\n\nconst logCallsReducer = createReducer(initialState, (handleAction) => [\n  handleAction(fetchLogCallsAction.success, (state, { payload }) => ({\n    ...state,\n    all: payload.logCalls,\n  })),\n]);\n\nexport default logCallsReducer;\n"]},"metadata":{},"sourceType":"module"}