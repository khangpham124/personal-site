{"ast":null,"code":"import _defineProperty from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { getType } from 'deox';\nimport { uiActions } from '../../actions';\n\nvar successReducer = function successReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === getType(uiActions.resetActionStatus)) {\n    var actionName = action.payload.actionName;\n\n    var _ = state[actionName],\n        newState = _objectWithoutProperties(state, [actionName].map(_toPropertyKey));\n\n    return newState;\n  }\n\n  var matches = /(.*)_(REQUEST|SUCCESS)/.exec(action.type);\n  if (!matches) return state;\n\n  var _matches = _slicedToArray(matches, 3),\n      requestName = _matches[1],\n      requestStatus = _matches[2];\n\n  return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, requestName, requestStatus === 'SUCCESS'));\n};\n\nexport default successReducer;","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/reducers/status/success.ts"],"names":["getType","uiActions","successReducer","state","action","type","resetActionStatus","actionName","payload","_","newState","matches","exec","requestName","requestStatus"],"mappings":";;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,MAAxB;AAEA,SAASC,SAAT,QAA0B,eAA1B;;AAgBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAqF;AAAA,MAApFC,KAAoF,uEAA7D,EAA6D;AAAA,MAAzDC,MAAyD;;AAC1G,MAAIA,MAAM,CAACC,IAAP,KAAgBL,OAAO,CAACC,SAAS,CAACK,iBAAX,CAA3B,EAA0D;AAAA,QAChDC,UADgD,GAChCH,MAAD,CAAyBI,OADQ,CAChDD,UADgD;;AAAA,QAElCE,CAFkC,GAEfN,KAFe,CAE/CI,UAF+C;AAAA,QAE5BG,QAF4B,4BAEfP,KAFe,GAE/CI,UAF+C;;AAGxD,WAAOG,QAAP;AACD;;AAED,MAAMC,OAAO,GAAG,yBAAyBC,IAAzB,CAA8BR,MAAM,CAACC,IAArC,CAAhB;AAEA,MAAI,CAACM,OAAL,EAAc,OAAOR,KAAP;;AAT4F,gCAWnEQ,OAXmE;AAAA,MAWjGE,WAXiG;AAAA,MAWpFC,aAXoF;;AAY1G,yCACKX,KADL,2BAEGU,WAFH,EAEiBC,aAAa,KAAK,SAFnC;AAID,CAhBD;;AAkBA,eAAeZ,cAAf","sourcesContent":["import { getType } from 'deox';\n\nimport { uiActions } from '../../actions';\n\nexport type TSuccessState = { [id: string]: boolean };\n\ninterface ISuccessAction {\n  type: string;\n  payload?: string;\n}\n\ninterface IResetAction {\n  type: string;\n  payload: {\n    actionName: string;\n  };\n}\n\nconst successReducer = (state: TSuccessState = {}, action: ISuccessAction | IResetAction): TSuccessState => {\n  if (action.type === getType(uiActions.resetActionStatus)) {\n    const { actionName } = (action as IResetAction).payload;\n    const { [actionName]: _, ...newState } = state;\n    return newState;\n  }\n\n  const matches = /(.*)_(REQUEST|SUCCESS)/.exec(action.type);\n\n  if (!matches) return state;\n\n  const [, requestName, requestStatus] = matches;\n  return {\n    ...state,\n    [requestName]: requestStatus === 'SUCCESS',\n  };\n};\n\nexport default successReducer;\n"]},"metadata":{},"sourceType":"module"}