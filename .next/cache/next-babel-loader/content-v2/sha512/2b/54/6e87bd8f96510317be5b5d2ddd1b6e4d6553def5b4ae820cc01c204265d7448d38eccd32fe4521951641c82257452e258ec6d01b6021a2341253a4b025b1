{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport cookie from \"react-cookies\";\nconst COOKIE_DOMAIN = process.env.REACT_APP_COOKIE_DOMAIN;\nconst COOKIE_REFRESH_TOKEN = \"rtk\";\nconst COOKIE_ACCESS_TOKEN = \"atk\";\nconst COOKIE_CRM_ACCESS_TOKEN = \"crm_token\"; // const MAXIMUM_EXPIRES_TIME = 2147483647;\n\nconst cookieSetting = {\n  path: \"/\",\n  domain: COOKIE_DOMAIN // secure: true,\n  // httpOnly: true,\n  // expires: MAXIMUM_EXPIRES_TIME,\n\n};\n\nconst setCookie = (name, value) => cookie.save(name, value, cookieSetting);\n\nconst getCookie = name => cookie.load(name);\n\nconst removeCookie = name => cookie.remove(name, cookieSetting);\n\nclass AuthHelpers {\n  constructor() {\n    _defineProperty(this, \"getRefreshToken\", () => getCookie(COOKIE_REFRESH_TOKEN));\n\n    _defineProperty(this, \"storeRefreshToken\", refreshToken => setCookie(COOKIE_REFRESH_TOKEN, refreshToken));\n\n    _defineProperty(this, \"getAccessToken\", () => getCookie(COOKIE_ACCESS_TOKEN));\n\n    _defineProperty(this, \"getCrmAccessToken\", () => getCookie(COOKIE_CRM_ACCESS_TOKEN));\n\n    _defineProperty(this, \"storeAccessToken\", accessToken => setCookie(COOKIE_ACCESS_TOKEN, accessToken));\n\n    _defineProperty(this, \"clearTokens\", () => {\n      removeCookie(COOKIE_REFRESH_TOKEN);\n      removeCookie(COOKIE_ACCESS_TOKEN);\n    });\n  }\n\n}\n\nconst instance = new AuthHelpers();\nexport default instance;","map":null,"metadata":{},"sourceType":"module"}