{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchProductsSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchProductSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(updateProductSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(createProductSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(root);\n\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { fetchProductAction, fetchProductsAction, updateProductAction, createProductAction } from \"../actions/products\";\nimport ProductsInstance from \"services/identity/products\";\nexport function fetchProductsSaga(action) {\n  var _action$payload, pageIndex, pageSize, optionalParams, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchProductsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _action$payload = action.payload, pageIndex = _action$payload.pageIndex, pageSize = _action$payload.pageSize, optionalParams = _action$payload.optionalParams, cb = _action$payload.cb;\n          _context.next = 4;\n          return call(ProductsInstance.fetchProducts, pageIndex, pageSize, optionalParams);\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return put(fetchProductsAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put(fetchProductsAction.failure(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\nexport function fetchProductSaga(action) {\n  var _action$payload2, id, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchProductSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _action$payload2 = action.payload, id = _action$payload2.id, cb = _action$payload2.cb;\n          _context2.next = 4;\n          return call(ProductsInstance.fetchProduct, id);\n\n        case 4:\n          response = _context2.sent;\n          _context2.next = 7;\n          return put(fetchProductAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put(fetchProductAction.failure(_context2.t0));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\nexport function updateProductSaga(action) {\n  var _action$payload3, id, body, successCb, failedCb;\n\n  return _regeneratorRuntime.wrap(function updateProductSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _action$payload3 = action.payload, id = _action$payload3.id, body = _action$payload3.body, successCb = _action$payload3.successCb, failedCb = _action$payload3.failedCb;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(ProductsInstance.updateProduct, id, body);\n\n        case 4:\n          successCb === null || successCb === void 0 ? void 0 : successCb();\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 11;\n          return put(updateProductAction.failure(_context3.t0));\n\n        case 11:\n          failedCb();\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 7]]);\n}\nexport function createProductSaga(action) {\n  var _action$payload4, body, cb, response;\n\n  return _regeneratorRuntime.wrap(function createProductSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _action$payload4 = action.payload, body = _action$payload4.body, cb = _action$payload4.cb;\n          _context4.next = 4;\n          return call(ProductsInstance.createProduct, body);\n\n        case 4:\n          response = _context4.sent;\n          _context4.next = 7;\n          return put(createProductAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context4.next = 14;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 14;\n          return put(createProductAction.failure(_context4.t0));\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 10]]);\n}\nexport default function root() {\n  return _regeneratorRuntime.wrap(function root$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([takeLatest(fetchProductsAction.request.type, fetchProductsSaga), takeLatest(fetchProductAction.request.type, fetchProductSaga), takeLatest(updateProductAction.request.type, updateProductSaga), takeLatest(createProductAction.request.type, createProductSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/sagas/products.ts"],"names":["fetchProductsSaga","fetchProductSaga","updateProductSaga","createProductSaga","root","all","call","put","takeLatest","fetchProductAction","fetchProductsAction","updateProductAction","createProductAction","ProductsInstance","action","payload","pageIndex","pageSize","optionalParams","cb","fetchProducts","response","success","failure","id","fetchProduct","body","successCb","failedCb","updateProduct","createProduct","request","type"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { ActionType } from \"deox\";\n\nimport { fetchProductAction, fetchProductsAction, updateProductAction, createProductAction } from \"../actions/products\";\nimport ProductsInstance from \"services/identity/products\";\nimport { TFetchProductResponse, TFetchProductsResponse, TCreateProductResponse } from \"services/identity/products/types\";\n\nexport function* fetchProductsSaga(\n  action: ActionType<typeof fetchProductsAction.request>\n): Generator {\n  try {\n    const { pageIndex, pageSize, optionalParams, cb } = action.payload;\n    const response = yield call(ProductsInstance.fetchProducts, pageIndex, pageSize, optionalParams);\n    yield put(fetchProductsAction.success(response as TFetchProductsResponse));\n    cb?.();\n  } catch (err) {\n    yield put(fetchProductsAction.failure(err));\n  }\n}\n\nexport function* fetchProductSaga(\n  action: ActionType<typeof fetchProductAction.request>\n): Generator {\n  try {\n    const { id, cb } = action.payload;\n    const response = yield call(ProductsInstance.fetchProduct, id);\n    yield put(fetchProductAction.success(response as TFetchProductResponse));\n    cb?.();\n  } catch (err) {\n    yield put(fetchProductAction.failure(err));\n  }\n}\n\nexport function* updateProductSaga(\n  action: ActionType<typeof updateProductAction.request>\n): Generator {\n  const { id, body, successCb, failedCb } = action.payload;\n  try {\n    yield call(ProductsInstance.updateProduct, id, body);\n    successCb?.();\n  } catch (err) {\n    yield put(updateProductAction.failure(err));\n    failedCb();\n  }\n}\n\nexport function* createProductSaga(\n  action: ActionType<typeof createProductAction.request>\n): Generator {\n  try {\n    const { body, cb } = action.payload;\n    const response = yield call(ProductsInstance.createProduct, body);\n    yield put(createProductAction.success(response as TCreateProductResponse));\n    cb?.();\n  } catch (err) {\n    yield put(createProductAction.failure(err));\n  }\n}\n\nexport default function* root(): Generator {\n  yield all([\n    takeLatest(fetchProductsAction.request.type, fetchProductsSaga),\n    takeLatest(fetchProductAction.request.type, fetchProductSaga),\n    takeLatest(updateProductAction.request.type, updateProductSaga),\n    takeLatest(createProductAction.request.type, createProductSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}