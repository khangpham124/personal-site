{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchProjectsSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchProjectDetailSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(createProjectSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(updateProjectSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(validateDomainSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(createProjectDesignSaga),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(fetchProjectDesignDetailSaga),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(fetchProjectDesignByDomainSaga),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(root);\n\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { createProjectAction, fetchProjectDetailAction, fetchProjectsAction, updateProjectAction, createProjectDesignAction, fetchProjectDesignDetailAction, fetchProjectDesignByDomainAction, validateDomainAction } from \"../actions/projects\";\nimport ProjectsInstance from \"services/identity/projects\";\nexport function fetchProjectsSaga(action) {\n  var _action$payload, pageIndex, pageSize, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchProjectsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _action$payload = action.payload, pageIndex = _action$payload.pageIndex, pageSize = _action$payload.pageSize, cb = _action$payload.cb;\n          _context.next = 4;\n          return call(ProjectsInstance.fetchProjects, pageIndex, pageSize);\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return put(fetchProjectsAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put(fetchProjectsAction.failure(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\nexport function fetchProjectDetailSaga(action) {\n  var _action$payload2, id, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchProjectDetailSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _action$payload2 = action.payload, id = _action$payload2.id, cb = _action$payload2.cb;\n          _context2.next = 4;\n          return call(ProjectsInstance.fetchProjectDetail, id);\n\n        case 4:\n          response = _context2.sent;\n          _context2.next = 7;\n          return put(fetchProjectDetailAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put(fetchProjectDetailAction.failure(_context2.t0));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\nexport function createProjectSaga(action) {\n  var _action$payload3, body, cb, response;\n\n  return _regeneratorRuntime.wrap(function createProjectSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _action$payload3 = action.payload, body = _action$payload3.body, cb = _action$payload3.cb;\n          _context3.next = 4;\n          return call(ProjectsInstance.createProject, body);\n\n        case 4:\n          response = _context3.sent;\n          cb === null || cb === void 0 ? void 0 : cb(response);\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put(createProjectAction.failure(_context3.t0));\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\nexport function updateProjectSaga(action) {\n  var _action$payload4, id, body, cb;\n\n  return _regeneratorRuntime.wrap(function updateProjectSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _action$payload4 = action.payload, id = _action$payload4.id, body = _action$payload4.body, cb = _action$payload4.cb;\n          _context4.next = 4;\n          return call(ProjectsInstance.updateProject, id, body);\n\n        case 4:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context4.next = 11;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 11;\n          return put(updateProjectAction.failure(_context4.t0));\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n}\nexport function validateDomainSaga(action) {\n  var _action$payload5, id, cb;\n\n  return _regeneratorRuntime.wrap(function validateDomainSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _action$payload5 = action.payload, id = _action$payload5.id, cb = _action$payload5.cb;\n          _context5.next = 4;\n          return call(ProjectsInstance.validateDomain, id);\n\n        case 4:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context5.next = 11;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 11;\n          return put(validateDomainAction.failure(_context5.t0));\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\nexport function createProjectDesignSaga(action) {\n  var _action$payload6, id, body, cb;\n\n  return _regeneratorRuntime.wrap(function createProjectDesignSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _action$payload6 = action.payload, id = _action$payload6.id, body = _action$payload6.body, cb = _action$payload6.cb;\n          _context6.next = 4;\n          return call(ProjectsInstance.createProjectDesign, id, body);\n\n        case 4:\n          _context6.next = 6;\n          return put(createProjectDesignAction.success());\n\n        case 6:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context6.next = 13;\n          break;\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 13;\n          return put(createProjectDesignAction.failure(_context6.t0));\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 9]]);\n}\nexport function fetchProjectDesignDetailSaga(action) {\n  var _action$payload7, id, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchProjectDesignDetailSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _action$payload7 = action.payload, id = _action$payload7.id, cb = _action$payload7.cb;\n          _context7.next = 4;\n          return call(ProjectsInstance.fetchProjectDesignDetail, id);\n\n        case 4:\n          response = _context7.sent;\n          _context7.next = 7;\n          return put(fetchProjectDesignDetailAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context7.next = 14;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 14;\n          return put(fetchProjectDesignDetailAction.failure(_context7.t0));\n\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 10]]);\n}\nexport function fetchProjectDesignByDomainSaga(action) {\n  var _action$payload8, domainName, cb, response;\n\n  return _regeneratorRuntime.wrap(function fetchProjectDesignByDomainSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _action$payload8 = action.payload, domainName = _action$payload8.domainName, cb = _action$payload8.cb;\n          _context8.next = 4;\n          return call(ProjectsInstance.fetchProjectDesignByDomain, domainName);\n\n        case 4:\n          response = _context8.sent;\n          _context8.next = 7;\n          return put(fetchProjectDesignByDomainAction.success(response));\n\n        case 7:\n          cb === null || cb === void 0 ? void 0 : cb();\n          _context8.next = 14;\n          break;\n\n        case 10:\n          _context8.prev = 10;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 14;\n          return put(fetchProjectDesignByDomainAction.failure(_context8.t0));\n\n        case 14:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 10]]);\n}\nexport default function root() {\n  return _regeneratorRuntime.wrap(function root$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([takeLatest(fetchProjectsAction.request.type, fetchProjectsSaga), takeLatest(fetchProjectDetailAction.request.type, fetchProjectDetailSaga), takeLatest(createProjectAction.request.type, createProjectSaga), takeLatest(updateProjectAction.request.type, updateProjectSaga), takeLatest(validateDomainAction.request.type, validateDomainSaga), takeLatest(createProjectDesignAction.request.type, createProjectDesignSaga), takeLatest(fetchProjectDesignDetailAction.request.type, fetchProjectDesignDetailSaga), takeLatest(fetchProjectDesignByDomainAction.request.type, fetchProjectDesignByDomainSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/state-management/sagas/projects.ts"],"names":["fetchProjectsSaga","fetchProjectDetailSaga","createProjectSaga","updateProjectSaga","validateDomainSaga","createProjectDesignSaga","fetchProjectDesignDetailSaga","fetchProjectDesignByDomainSaga","root","all","call","put","takeLatest","createProjectAction","fetchProjectDetailAction","fetchProjectsAction","updateProjectAction","createProjectDesignAction","fetchProjectDesignDetailAction","fetchProjectDesignByDomainAction","validateDomainAction","ProjectsInstance","action","payload","pageIndex","pageSize","cb","fetchProjects","response","success","failure","id","fetchProjectDetail","body","createProject","updateProject","validateDomain","createProjectDesign","fetchProjectDesignDetail","domainName","fetchProjectDesignByDomain","request","type"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { ActionType } from \"deox\";\n\nimport {\n  createProjectAction,\n  fetchProjectDetailAction,\n  fetchProjectsAction,\n  updateProjectAction,\n  createProjectDesignAction,\n  fetchProjectDesignDetailAction,\n  fetchProjectDesignByDomainAction,\n  validateDomainAction\n} from \"../actions/projects\";\nimport ProjectsInstance from \"services/identity/projects\";\nimport {\n  TFetchProjectDesignByDomainResponse,\n  TFetchProjectDesignDetailResponse,\n  TFetchProjectDetailResponse,\n  TFetchProjectsResponse,\n  TProject,\n} from \"services/identity/projects/types\";\n\nexport function* fetchProjectsSaga(\n  action: ActionType<typeof fetchProjectsAction.request>\n): Generator {\n  try {\n    const { pageIndex, pageSize, cb } = action.payload;\n    const response = yield call(\n      ProjectsInstance.fetchProjects,\n      pageIndex,\n      pageSize\n    );\n    yield put(fetchProjectsAction.success(response as TFetchProjectsResponse));\n    cb?.();\n  } catch (err) {\n    yield put(fetchProjectsAction.failure(err));\n  }\n}\n\nexport function* fetchProjectDetailSaga(\n  action: ActionType<typeof fetchProjectDetailAction.request>\n): Generator {\n  try {\n    const { id, cb } = action.payload;\n    const response = yield call(ProjectsInstance.fetchProjectDetail, id);\n    yield put(\n      fetchProjectDetailAction.success(response as TFetchProjectDetailResponse)\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchProjectDetailAction.failure(err));\n  }\n}\n\nexport function* createProjectSaga(\n  action: ActionType<typeof createProjectAction.request>\n): Generator {\n  try {\n    const { body, cb } = action.payload;\n    const response = yield call(ProjectsInstance.createProject, body);\n    cb?.(response as TProject);\n  } catch (err) {\n    yield put(createProjectAction.failure(err));\n  }\n}\n\nexport function* updateProjectSaga(\n  action: ActionType<typeof updateProjectAction.request>\n): Generator {\n  try {\n    const { id, body, cb } = action.payload;\n    yield call(ProjectsInstance.updateProject, id, body);\n    cb?.();\n  } catch (err) {\n    yield put(updateProjectAction.failure(err));\n  }\n}\n\nexport function* validateDomainSaga(\n  action: ActionType<typeof validateDomainAction.request>\n): Generator {\n  try {\n    const { id, cb } = action.payload;\n    yield call(ProjectsInstance.validateDomain, id);\n    cb?.();\n  } catch (err) {\n    yield put(validateDomainAction.failure(err));\n  }\n}\n\nexport function* createProjectDesignSaga(\n  action: ActionType<typeof createProjectDesignAction.request>\n): Generator {\n  try {\n    const { id, body, cb } = action.payload;\n    yield call(ProjectsInstance.createProjectDesign, id, body);\n    yield put(createProjectDesignAction.success());\n    cb?.();\n  } catch (err) {\n    yield put(createProjectDesignAction.failure(err));\n  }\n}\n\nexport function* fetchProjectDesignDetailSaga(\n  action: ActionType<typeof fetchProjectDesignDetailAction.request>\n): Generator {\n  try {\n    const { id, cb } = action.payload;\n    const response = yield call(ProjectsInstance.fetchProjectDesignDetail, id);\n    yield put(\n      fetchProjectDesignDetailAction.success(\n        response as TFetchProjectDesignDetailResponse\n      )\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchProjectDesignDetailAction.failure(err));\n  }\n}\n\nexport function* fetchProjectDesignByDomainSaga(\n  action: ActionType<typeof fetchProjectDesignByDomainAction.request>\n): Generator {\n  try {\n    const { domainName, cb } = action.payload;\n    const response = yield call(\n      ProjectsInstance.fetchProjectDesignByDomain,\n      domainName\n    );\n    yield put(\n      fetchProjectDesignByDomainAction.success(\n        response as TFetchProjectDesignByDomainResponse\n      )\n    );\n    cb?.();\n  } catch (err) {\n    yield put(fetchProjectDesignByDomainAction.failure(err));\n  }\n}\n\nexport default function* root(): Generator {\n  yield all([\n    takeLatest(fetchProjectsAction.request.type, fetchProjectsSaga),\n    takeLatest(fetchProjectDetailAction.request.type, fetchProjectDetailSaga),\n    takeLatest(createProjectAction.request.type, createProjectSaga),\n    takeLatest(updateProjectAction.request.type, updateProjectSaga),\n    takeLatest(validateDomainAction.request.type, validateDomainSaga),\n    takeLatest(createProjectDesignAction.request.type, createProjectDesignSaga),\n    takeLatest(\n      fetchProjectDesignDetailAction.request.type,\n      fetchProjectDesignDetailSaga\n    ),\n    takeLatest(\n      fetchProjectDesignByDomainAction.request.type,\n      fetchProjectDesignByDomainSaga\n    ),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}