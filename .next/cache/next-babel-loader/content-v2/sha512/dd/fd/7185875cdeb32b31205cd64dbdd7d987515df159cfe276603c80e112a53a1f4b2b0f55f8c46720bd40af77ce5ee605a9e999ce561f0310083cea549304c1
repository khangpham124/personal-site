{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/admin/Documents/personal-site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport HttpClient from '../../../utils/axios/instance';\nimport { crmPlatform } from \"src/services/identity\";\n\nvar LogCalls = /*#__PURE__*/function (_HttpClient) {\n  _inherits(LogCalls, _HttpClient);\n\n  var _super = _createSuper(LogCalls);\n\n  function LogCalls() {\n    var _this;\n\n    _classCallCheck(this, LogCalls);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchLogCalls\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(type, id, pageIndex, pageSize) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.instance.get(\"\".concat(crmPlatform, \"/log-calls/\").concat(type, \"/\").concat(id, \"?pageIndex=\").concat(pageIndex, \"&pageSize=\").concat(pageSize));\n\n              case 2:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3, _x4) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"createLogCall\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type, id, body) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.instance.post(\"\".concat(crmPlatform, \"/log-calls/\").concat(type, \"/\").concat(id), body);\n\n              case 2:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x5, _x6, _x7) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  return LogCalls;\n}(HttpClient);\n\nvar LogCallsInstance = new LogCalls();\nexport default LogCallsInstance;","map":{"version":3,"sources":["/Users/admin/Documents/personal-site/src/services/identity/log-calls/index.ts"],"names":["HttpClient","crmPlatform","LogCalls","type","id","pageIndex","pageSize","instance","get","response","data","body","post","LogCallsInstance"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,+BAAvB;AAMA,SAASC,WAAT,QAA4B,uBAA5B;;IAEMC,Q;;;;;;;;;;;;;;;;;0EACY,iBACdC,IADc,EAEdC,EAFc,EAGdC,SAHc,EAIdC,QAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMS,MAAKC,QAAL,CAAcC,GAAd,WAClBP,WADkB,wBACOE,IADP,cACeC,EADf,wBAC+BC,SAD/B,uBACqDC,QADrD,EANT;;AAAA;AAMRG,gBAAAA,QANQ;AAAA,iDASPA,QAAQ,CAACC,IATF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;2EAYA,kBACdP,IADc,EAEdC,EAFc,EAGdO,IAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKS,MAAKJ,QAAL,CAAcK,IAAd,WAClBX,WADkB,wBACOE,IADP,cACeC,EADf,GAErBO,IAFqB,CALT;;AAAA;AAKRF,gBAAAA,QALQ;AAAA,kDASPA,QAAQ,CAACC,IATF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EAbKV,U;;AA0BvB,IAAMa,gBAAgB,GAAG,IAAIX,QAAJ,EAAzB;AACA,eAAeW,gBAAf","sourcesContent":["import HttpClient from '../../../utils/axios/instance';\nimport {\n  TFetchLogCallsResponse,\n  TCreateLogCallBody,\n} from \"./types\";\n\nimport { crmPlatform } from \"src/services/identity\";\n\nclass LogCalls extends HttpClient {\n  fetchLogCalls = async (\n    type: \"lead\" | \"customer\",\n    id: string,\n    pageIndex: number,\n    pageSize: number\n  ): Promise<TFetchLogCallsResponse> => {\n    const response = await this.instance.get(\n      `${crmPlatform}/log-calls/${type}/${id}?pageIndex=${pageIndex}&pageSize=${pageSize}`\n    );\n    return response.data;\n  };\n\n  createLogCall = async (\n    type: \"lead\" | \"customer\",\n    id: string,\n    body: TCreateLogCallBody\n  ): Promise<unknown> => {\n    const response = await this.instance.post(\n      `${crmPlatform}/log-calls/${type}/${id}`,\n      body\n    );\n    return response.data;\n  };\n}\n\nconst LogCallsInstance = new LogCalls();\nexport default LogCallsInstance;\n"]},"metadata":{},"sourceType":"module"}